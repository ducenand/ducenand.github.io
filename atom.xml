<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://ducenand.github.io/</id>
    <title>似水流年</title>
    <updated>2019-07-25T02:25:03.308Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://ducenand.github.io/"/>
    <link rel="self" href="https://ducenand.github.io//atom.xml"/>
    <subtitle>一万年太久，只争朝夕！</subtitle>
    <logo>https://ducenand.github.io//images/avatar.png</logo>
    <icon>https://ducenand.github.io//favicon.ico</icon>
    <rights>All rights reserved 2019, 似水流年</rights>
    <entry>
        <title type="html"><![CDATA[规范IDE开发工具]]></title>
        <id>https://ducenand.github.io//post/gui-fan-ide-kai-fa-gong-ju</id>
        <link href="https://ducenand.github.io//post/gui-fan-ide-kai-fa-gong-ju">
        </link>
        <updated>2019-07-25T02:23:14.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="推荐使用ide">推荐使用IDE</h2>
<ul>
<li><a href="https://code.visualstudio.com/">VSCode下载安装</a></li>
<li><a href="https://www.jetbrains.com/webstorm">WebStorm下载安装</a> <a href="https://blog.csdn.net/hdp134793/article/details/81530472">Webstorm破解解方法</a></li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h2 id="推荐使用ide">推荐使用IDE</h2>
<ul>
<li><a href="https://code.visualstudio.com/">VSCode下载安装</a></li>
<li><a href="https://www.jetbrains.com/webstorm">WebStorm下载安装</a> <a href="https://blog.csdn.net/hdp134793/article/details/81530472">Webstorm破解解方法</a></li>
</ul>
<!-- more -->
<p><a name="I6YoN"></a></p>
<h2 id="editorconfig-统一编辑器规范">EditorConfig 统一编辑器规范</h2>
<p><strong><a href="https://editorconfig.org/">EditorConfig</a> <strong>助于为跨越各种编辑器和</strong>IDE</strong>的同一项目的多人开发维护统一的编码样式。</p>
<p><a name="XNY7T"></a></p>
<h3 id="项目使用-editorconfig">项目使用 <code>.editorconfig</code></h3>
<pre><code class="language-bash"># https://editorconfig.org/
root = true

[*]
indent_style = space
indent_size = 2
end_of_line = lf
charset = utf-8
trim_trailing_whitespace = true
insert_final_newline = true

[*.md]
trim_trailing_whitespace = false
</code></pre>
<p><strong>执行顺序：自上而下</strong><br />**
<a name="NWAl1"></a></p>
<h4 id="配置项介绍">配置项介绍</h4>
<p><strong>1.</strong><code>**root &lt;blooean&gt;**</code></p>
<blockquote>
<p>是否是顶级配置文件，设置为true的时候才会停止搜索.editorconfig文件</p>
</blockquote>
<p><strong>2.</strong><code>**charset &lt;&quot;latin&quot; | &quot;utf-8&quot; | &quot;utf-8-bom&quot; | &quot;utf-16be&quot; | &quot;utf-16le&quot;&gt;**</code></p>
<blockquote>
<p>编码格式</p>
</blockquote>
<p><strong>3.</strong><code>**indent_style &lt;&quot;tab&quot; | &quot;space&quot;&gt;**</code></p>
<blockquote>
<p>缩进方式</p>
</blockquote>
<p><strong>4.</strong><code>**indent_size &lt;number&gt;**</code><br />缩进大小<br /><strong>5.</strong><code>**end_of_line &lt;&quot;lf&quot; | &quot;cr&quot; | &quot;crlf&quot;&gt;**</code></p>
<blockquote>
<p>换行符类型</p>
</blockquote>
<ul>
<li>cr：Carriage Return，对应ASCII中转义字符\r，表示回车</li>
<li>lf：Linefeed，对应ASCII中转义字符\n，表示换行</li>
<li>crlf：Carriage Return &amp; Linefeed，\r\n，表示回车并换行</li>
</ul>
<p><strong>6.</strong><code>**insert_final_newline &lt;blooean&gt;**</code></p>
<blockquote>
<p>是否让文件以空行结束</p>
</blockquote>
<p><strong>7.</strong><code>**trim_trailing_whitespace &lt;blooean&gt;**</code></p>
<blockquote>
<p>是否删除行尾空格</p>
</blockquote>
<p><strong>8.</strong><code>**max_line_length **``**&lt;positive integers(正整数) |  off&gt;**</code></p>
<blockquote>
<p>最大行宽</p>
</blockquote>
<p><a name="tPTzr"></a></p>
<h4 id="常用通配符介绍">常用通配符介绍</h4>
<p><strong><code>*</code></strong></p>
<blockquote>
<p>匹配除/之外的任意字符</p>
</blockquote>
<p><code>******</code></p>
<blockquote>
<p>匹配任意字符串</p>
</blockquote>
<p><strong><code>?</code></strong></p>
<blockquote>
<p>匹配任意单个字符</p>
</blockquote>
<p><strong><code>[name]</code></strong></p>
<blockquote>
<p>匹配name字符</p>
</blockquote>
<p><strong><code>[!name]</code></strong></p>
<blockquote>
<p>不匹配name字符</p>
</blockquote>
<p><strong><code>[s1,s2,s3]</code></strong></p>
<blockquote>
<p>匹配给定的字符串</p>
</blockquote>
<p><strong><code>[num1..num2]</code></strong></p>
<blockquote>
<p>匹配num1到mun2直接的整数</p>
</blockquote>
<p><a name="yqmbO"></a></p>
<h4 id="vscode搜索安装插件配合使用">VSCode搜索安装插件配合使用</h4>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563764525352-58f1e454-cf1d-400e-8918-c01af9f5ac3e.png#align=left&amp;display=inline&amp;height=345&amp;name=QQ20190722-0.png&amp;originHeight=345&amp;originWidth=1097&amp;size=25417&amp;status=done&amp;width=1097" alt="QQ20190722-0.png"></p>
<p><a name="HcxvG"></a></p>
<h4 id="webstorm-不需下载插件ide默认支持">WebStorm 不需下载插件，IDE默认支持</h4>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563765117193-c5033b10-085e-4d5d-b4d0-2a2233d4f516.png#align=left&amp;display=inline&amp;height=193&amp;name=image.png&amp;originHeight=385&amp;originWidth=756&amp;size=51931&amp;status=done&amp;width=378" alt="image.png"></p>
<p><a name="ObAH5"></a></p>
<h2 id="eslint-配置错误检测提示">Eslint 配置错误检测提示<a href="https://editorconfig.org/"></a></h2>
<p><a name="grxdQ"></a></p>
<h3 id="提示效果展示">提示效果展示</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563776250061-31853dfc-006c-43ea-bba3-b34176b1f2f4.png#align=left&amp;display=inline&amp;height=61&amp;name=image.png&amp;originHeight=121&amp;originWidth=488&amp;size=15304&amp;status=done&amp;width=244" alt="image.png"></p>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563776304657-147f64b9-dd30-449c-9194-a68d08964465.png#align=left&amp;display=inline&amp;height=61&amp;name=image.png&amp;originHeight=122&amp;originWidth=591&amp;size=16197&amp;status=done&amp;width=295.5" alt="image.png"></p>
<p><a name="igqEC"></a></p>
<h3 id="vscode-配置自动检测提示">VSCode 配置自动检测提示</h3>
<blockquote>
<p>下载ESLint 插件</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563778253958-1fabf583-0c7a-49c0-a0cf-278fb6951d90.png#align=left&amp;display=inline&amp;height=287&amp;name=73B0D19212530EED209A20682FF7AB90.png&amp;originHeight=287&amp;originWidth=1198&amp;size=18228&amp;status=done&amp;width=1198" alt="73B0D19212530EED209A20682FF7AB90.png"></p>
<blockquote>
<p>vscode 安装eslint插件后会默认支持项目<code>.eslintrc.js</code>配置错误提示</p>
</blockquote>
<p><a name="rEsRL"></a></p>
<h3 id="vscode-配置保存文件eslint自动修复错误">VSCode 配置保存文件ESLint自动修复错误</h3>
<blockquote>
<p>文件-&gt;首选项-&gt;设置-&gt;找到ESLint 选中Auto Fix On Save</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563778632705-35f10b4a-c8b7-4079-baba-65cdb5c2084c.png#align=left&amp;display=inline&amp;height=607&amp;name=516D5B0B96830C7B27D7D219074CCC1A.png&amp;originHeight=607&amp;originWidth=1158&amp;size=29684&amp;status=done&amp;width=1158" alt="516D5B0B96830C7B27D7D219074CCC1A.png"></p>
<p><a name="7fvb5"></a></p>
<h3 id="webstorm-配置自动检测提示">WebStorm 配置自动检测提示</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563776656013-1ab221e1-10c4-45db-a986-0d14d21149ca.png#align=left&amp;display=inline&amp;height=297&amp;name=image.png&amp;originHeight=594&amp;originWidth=1172&amp;size=97033&amp;status=done&amp;width=586" alt="image.png"></p>
<p><a name="pVW4e"></a></p>
<h3 id="webstorm-配置保存文件eslint自动修复错误">WebStorm 配置保存文件ESLint自动修复错误</h3>
<p>1.方法一设置快捷键修复</p>
<blockquote>
<p>打开设置 -&gt; Keymap 搜索 Fix ESLint Problems，双击配置快捷键，这里使用的是Ctrl + S。如果有冲突，选择其快捷键。</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563780074365-97f558bb-aa2b-40c4-8cc4-91a7b10eb73c.png#align=left&amp;display=inline&amp;height=286&amp;name=image.png&amp;originHeight=572&amp;originWidth=1168&amp;size=101688&amp;status=done&amp;width=584" alt="image.png"><br />2.方法二监听文件变化自动修复</p>
<blockquote>
<p>打开设置-&gt; 搜索 File Watchers 添加新的prettier规则</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563780479441-7b3ce362-6f9c-4375-a980-04dda69d302c.png#align=left&amp;display=inline&amp;height=406&amp;name=image.png&amp;originHeight=811&amp;originWidth=1166&amp;size=108670&amp;status=done&amp;width=583" alt="image.png"></p>
<blockquote>
<p>选择File type 为 Any ,增加项目Scope作用域</p>
</blockquote>
<p><strong><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563780536503-8a61015d-0e4c-41e5-af3b-4bcc746db3e3.png#align=left&amp;display=inline&amp;height=259&amp;name=image.png&amp;originHeight=518&amp;originWidth=936&amp;size=60336&amp;status=done&amp;width=468" alt="image.png"></strong></p>
<blockquote>
<p>新建作用域增加规则，排除不需要监听的文件。</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563852610869-d54836fa-1536-4a20-9dc1-198b2ca15cd0.png#align=left&amp;display=inline&amp;height=413&amp;name=image.png&amp;originHeight=826&amp;originWidth=989&amp;size=70987&amp;status=done&amp;width=494.5" alt="image.png">
<a name="DL6Mx"></a></p>
<h2 id="单词拼写检查">单词拼写检查</h2>
<p><a name="onVIn"></a></p>
<h3 id="vscode-下载-code-spell-checker-支持单词拼写检查">VSCode 下载 Code Spell Checker 支持单词拼写检查</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563795402622-4a949b0b-c31a-46c5-b0ed-c1f809453bcd.png#align=left&amp;display=inline&amp;height=232&amp;name=57BCD1FD7FA43479D8D9C60AC415016B.png&amp;originHeight=232&amp;originWidth=1155&amp;size=18425&amp;status=done&amp;width=1155" alt="57BCD1FD7FA43479D8D9C60AC415016B.png"></p>
<p><a name="pa4MW"></a></p>
<h3 id="webstrom-默认支持单词拼写检查">WebStrom 默认支持单词拼写检查</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563795573557-8d4fc446-ade6-4cad-bb24-a8e60b3c7a34.png#align=left&amp;display=inline&amp;height=397&amp;name=image.png&amp;originHeight=794&amp;originWidth=1174&amp;size=142710&amp;status=done&amp;width=587" alt="image.png"></p>
<p><a name="rGfFy"></a></p>
<h2 id="ide设置vue代码片段">IDE设置VUE代码片段</h2>
<blockquote>
<p>设置代码片段快速生成符合设计规范的组件</p>
</blockquote>
<p><a name="AMnRV"></a></p>
<h3 id="vscode配置代码片段">VSCode配置代码片段</h3>
<blockquote>
<p>文件-&gt;首选项-&gt;用户代码片段-&gt;搜索vue.json-&gt;添加下面代码片段</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/jpeg/173770/1563853030282-c04ab2ee-e1a2-48c3-a940-08626d251cc9.jpeg#align=left&amp;display=inline&amp;height=616&amp;name=AE0E1B07AD6EC4808BDAF58B55A81AE1.jpg&amp;originHeight=616&amp;originWidth=802&amp;size=69070&amp;status=done&amp;width=802" alt="AE0E1B07AD6EC4808BDAF58B55A81AE1.jpg">
<a name="IiegT"></a></p>
<h4 id="vscode代码片段">VSCode代码片段</h4>
<pre><code class="language-bash">{
	&quot;vue-tpl&quot;: {
	  &quot;prefix&quot;: &quot;vue-tpl&quot;,
	  &quot;body&quot;: [
		&quot;&lt;template&gt;&quot;,
		&quot;  &lt;div class=\&quot;toggle toggle--simple\&quot;&gt;&quot;,
    	&quot;    &lt;div class=\&quot;toggle__control toggle__control--active\&quot;&gt;&quot;,
    	&quot;      &lt;h2 class=\&quot;toggle__title\&quot;&gt;Title&lt;/h2&gt;&quot;,
    	&quot;    &lt;/div&gt;&quot;,
    	&quot;    &lt;div class=\&quot;toggle__details toggle__details--active\&quot;&gt;&quot;,
        &quot;      ...&quot;,
    	&quot;    &lt;/div&gt;&quot;,
    	&quot;      ...&quot;,
		&quot;  &lt;/div&gt;&quot;,
		&quot;&lt;/template&gt;&quot;,
  
		&quot;&lt;script&gt;&quot;,
		&quot;export default {&quot;,
		&quot;  name: \&quot;$1\&quot;,&quot;,
		&quot;  components: {},&quot;,
    &quot;  props: {},&quot;,
		&quot;  data() {&quot;,
		&quot;    return {};&quot;,
		&quot;  },&quot;,
		&quot;  computed: {},&quot;,
		&quot;  methods: {},&quot;,
		&quot;  watch: {},&quot;,
		&quot;  created() {},&quot;,
		&quot;  mounted() {}&quot;,
		&quot;};&quot;,
		&quot;&lt;/script&gt;&quot;,
  
		&quot;&lt;style lang=\&quot;scss\&quot; scoped&gt;&quot;,
		&quot;  //.toggle {}&quot;,
		&quot;  //.toggle--simple {}&quot;,
		&quot;  //.toggle__control {}&quot;,
		&quot;  //.toggle__control--active {}&quot;,
		&quot;  //...&quot;,
		&quot;&lt;/style&gt;&quot;,
	  ],
	  &quot;description&quot;: &quot;vue template&quot;
	}
}
</code></pre>
<p><a name="qjDhE"></a></p>
<h4 id="vscode使用代码片段">VSCode使用代码片段</h4>
<blockquote>
<p>.vue 文件输入vue-tpl</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563853388239-c52650d8-9514-4167-b6fc-cd8c98e3af60.png#align=left&amp;display=inline&amp;height=167&amp;name=9B973F4ACD5DFDE369990BA7ECEDC6C6.png&amp;originHeight=167&amp;originWidth=700&amp;size=4799&amp;status=done&amp;width=700" alt="9B973F4ACD5DFDE369990BA7ECEDC6C6.png"></p>
<p><a name="IVnLo"></a></p>
<h3 id="webstorm配置代码片段">WebStorm配置代码片段</h3>
<blockquote>
<p>Preferences-&gt; 搜索Live Template-&gt;选择Live Templates-&gt;右侧➕号添加片段-&gt;片段命名描述-&gt;change选择作用域-&gt;添加下方片段至Template text中</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563853859107-fa7d506b-e1be-4493-a918-3bc0e5bef88a.png#align=left&amp;display=inline&amp;height=461&amp;name=image.png&amp;originHeight=922&amp;originWidth=1535&amp;size=186335&amp;status=done&amp;width=767.5" alt="image.png">
<a name="dHXD4"></a></p>
<h4 id="webstorm代码片段">Webstorm代码片段</h4>
<pre><code class="language-bash">&lt;template&gt;
  &lt;div class=&quot;toggle toggle--simple&quot;&gt;
    &lt;div class=&quot;toggle__control toggle__control--active&quot;&gt;
      &lt;h2 class=&quot;toggle__title&quot;&gt;Title&lt;/h2&gt;
    &lt;/div&gt;
    &lt;div class=&quot;toggle__details toggle__details--active&quot;&gt;
      ...
    &lt;/div&gt;
    ...
  &lt;/div&gt;
&lt;/template&gt;
&lt;script&gt;
export default {
  name: &quot;$componentName$&quot;,
  components: {},
  props: {},
  data() {
    return {};
  },
  computed: {},
  methods: {},
  watch: {},
  created() {},
  mounted() {}
};
&lt;/script&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
//.toggle {}
//.toggle--simple {}
//.toggle__control {}
//.toggle__control--active {}
//...
&lt;/style&gt;
</code></pre>
<p><a name="Purk5"></a></p>
<h4 id=""></h4>
<p><a name="DNdHS"></a></p>
<h4 id="webstorm使用代码片段">WebStorm使用代码片段</h4>
<blockquote>
<p>.vue 文件中输入vue-tpl 按下**<code>tab</code>**键</p>
</blockquote>
<p><a name="PvyI3"></a></p>
<h3 id="代码片段介绍">代码片段介绍</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563855941554-275867ba-ba93-4dbe-b718-37ad02be5cfe.png#align=left&amp;display=inline&amp;height=447&amp;name=image.png&amp;originHeight=893&amp;originWidth=496&amp;size=82001&amp;status=done&amp;width=248" alt="image.png">
<a name="k2KCh"></a></p>
<h4 id="1bem规范命名css">1.BEM规范命名CSS</h4>
<p>BEM是由Yandex提出的给一个CSS命名方法, 该方法要求使用一个CSS类名, 尽可能使用以下三者组成:</p>
<ul>
<li>块名: 所属组件的名称</li>
<li>元素: 元素在块里面的名称</li>
<li>修饰符: 任何与块或元素相关联的的修饰符</li>
</ul>
<p><strong>块名</strong><br />这里的块名指的是一个独立的模块或组件. 例如一个<code>&lt;header&gt;</code>可以用做一个模块, <code>&lt;header&gt;</code>中的<code>&lt;nav&gt;</code>可以用作一个模块. 模块之间是可以相互嵌套的. 上面的示例代码中 ,toggle就是一个独立的模块<br /><strong>元素</strong><br />元素是指无法用在其他块名中的部分, 在BEM方法中, 元素跟在块名后面使用<code>__</code>连接, 之所以约定使用双下划线是因为方便在块名中使用单下划线命名. 上面示例代码中的<code>toggle__control</code>,<code>toggle__title</code>就是块名+元素的命名方式.<br /><strong>修饰符</strong><br />修饰符与SMACSS中的状态类似, 在BEM方法中, 修饰符需要跟在元素后面使用<code>--</code>连接. 有的人会觉得这种写法会使得代码冗余, SMACSS使用<code>is-active</code>同样可以表示同样的作用, 为什么上面的代码要使用<code>toggle__details--active</code>呢? 其实, 如果单独看<code>is-active</code>这个名字, 我们并不知道它们的含义是什么, 但是当看到一个<code>toggle__details--active</code>的类名, 我们就知道它是表示: 这个元素的名称是<code>details</code>, 位置在<code>toggle</code>组件里, 状态为<code>active</code>.
<a name="ZBtFH"></a></p>
<h4 id="2遵循vue-cli项目目录结构设计中的-vue-生命周期排列顺序">2.遵循<a href="http://wiki.corp.talcloud.com/pages/viewpage.action?pageId=14352391">vue-cli项目目录结构设计</a>中的 vue 生命周期排列顺序</h4>
<p><a name="WXXnf"></a></p>
<h4 id="3每个css类名都有一个独一无二的标识无需嵌套">3.每个CSS类名都有一个独一无二的标识，无需嵌套</h4>
<p>CSS使用BEM规范后，每一个CSS类名都有一个独一无二的标识，这样是每个CSS类名都对应到某一组独属于该元素的CSS属性，而不会随着具体情境或选择器的使用而变化。</p>
<pre><code class="language-html">&lt;div class=&quot;main&quot;&gt;
	&lt;h2 class=&quot;content__title&quot;&gt;Header&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;sidebar&quot;&gt;
	&lt;h2 class=&quot;content__title--reversed&quot;&gt;Sidebar Header&lt;/h2&gt;
&lt;/div&gt;
&lt;div class=&quot;calendar&quot;&gt;
  &lt;h2 class=&quot;calendar__title&quot;&gt;Calendar Header&lt;/h2&gt;
&lt;/div&gt;
</code></pre>
<pre><code class="language-css">/*组件文件夹*/
.content__title {
	font-size: 24px;
  color: red;
}
.content__title--reversed {
  font-size: 20px;
  color: white;
}
.calendar__title {
	font-size: 20px;
  color: red
}
/*布局文件夹*/
.main{
  float: left;
  ...
}
.sidebar {
	float: right;
  ...
}

</code></pre>
<p>这样就解决了由于依赖位置而造成CSS样式混乱的问题。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[探索与发现：第5期]]></title>
        <id>https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-5-qi</id>
        <link href="https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-5-qi">
        </link>
        <updated>2019-07-21T10:27:34.000Z</updated>
        <summary type="html"><![CDATA[<p>1、近日在以色列特拉维夫举办的第五十届奥林匹克物理竞赛，中国全部5名成员均获得金牌，获得团体世界第一。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563502624352-8921c44f-d797-4729-918c-76cefd5a2b3f.png#align=left&amp;display=inline&amp;height=404&amp;name=image.png&amp;originHeight=808&amp;originWidth=1386&amp;size=1530371&amp;status=done&amp;width=693" alt="image.png"></p>
]]></summary>
        <content type="html"><![CDATA[<p>1、近日在以色列特拉维夫举办的第五十届奥林匹克物理竞赛，中国全部5名成员均获得金牌，获得团体世界第一。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563502624352-8921c44f-d797-4729-918c-76cefd5a2b3f.png#align=left&amp;display=inline&amp;height=404&amp;name=image.png&amp;originHeight=808&amp;originWidth=1386&amp;size=1530371&amp;status=done&amp;width=693" alt="image.png"></p>
 <!-- more -->
<p>2、2019年法国巴黎大阅兵，“未来战士”驾单兵飞行器参加阅兵。是不是有点红警里飞行兵的感觉。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563502841307-e399d76e-5931-4688-8664-5252e594d395.png#align=left&amp;display=inline&amp;height=406&amp;name=image.png&amp;originHeight=812&amp;originWidth=1376&amp;size=334911&amp;status=done&amp;width=688" alt="image.png"><br />3、日前，三只松鼠成功上市，创始人章燎原走上人生巅峰。鲜为人知的是，在创办三只松鼠之前，他是个不折不扣的loser，曾当过芜湖街头的小混混，卖过光碟、服装，做过电工、跑过摩的，干过将近20个行业，却几乎事事无成。“谁会像我一样开始怀疑自己是不是天生的倒霉蛋，开饭馆赔得一塌糊涂，开摩的被城管抓了3次，喝水都塞牙。” <br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563503054113-4b84b9b5-6d71-4439-b4ec-291ba97ec142.png#align=left&amp;display=inline&amp;height=466&amp;name=image.png&amp;originHeight=932&amp;originWidth=1512&amp;size=943374&amp;status=done&amp;width=756" alt="image.png"></p>
<p>4、据北京市生活垃圾分类治理行动计划：年底前，全市垃圾分类示范片区覆盖率将达到60%，明年底达到90%。目前，分类标准为厨余垃圾、其它垃圾、有害垃圾、可回收物4类；居民将垃圾分好送到投放点，厨余垃圾每公斤获得2个积分，可回收物每公斤积16分，积分可换取日用品。</p>
<p>5、因气候变化导致水温变暖，地中海的狮子鱼大增，海洋生态遭受威胁。它是有毒食肉鱼类，无法与其他鱼共存，原产于印度洋、太平洋、红海，随着海洋温度升高，狮子鱼近年来，出现在其他海域，给海洋生物多样性带来威胁。<br />幸运的是它是海洋中最美味的鱼之一。要不要让中国人来拯救一下。✌️<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563503495198-597e7538-b2c7-44ad-8719-3df2e475b131.png#align=left&amp;display=inline&amp;height=495&amp;name=image.png&amp;originHeight=990&amp;originWidth=1548&amp;size=2274581&amp;status=done&amp;width=774" alt="image.png"></p>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563503663133-45e6a377-5310-4759-a315-1bf17ae5e1c5.png#align=left&amp;display=inline&amp;height=509&amp;name=image.png&amp;originHeight=1018&amp;originWidth=1738&amp;size=2725483&amp;status=done&amp;width=869" alt="image.png"></p>
<p>多栖息于温带靠海岸的岩礁或珊瑚礁内，也会在在桥桩、沉船残骸、水草丛中生活。性格孤僻，喜独居。以甲壳类动物、无脊椎动物及小型鱼类为食。繁殖为卵生。分布海域为印度洋及太平洋，大西洋海域有引进。<br />6、这款机器人来自麻省理工学院计算机科学与人工智能实验室（MIT CSAIL）它最大的亮点在于视觉感知能力，能够跟随并“复制”你的动作，有望替代人类在危险环境中进行操作。该机器人所使用的系统主要收集连接到用户二头肌和三头肌的肌电图，通过相应的算法分析人类手臂水平的变化，以及用户可能做出的上下手势，从而实现更精细的电机控制。 <br /><img src="https://cdn.nlark.com/yuque/0/2019/gif/173770/1563531605218-dc4336d3-7584-4d30-9e05-df2cb926019c.gif#align=left&amp;display=inline&amp;height=322&amp;name=%E6%9C%BA%E5%99%A8%E4%BA%BA.gif&amp;originHeight=322&amp;originWidth=583&amp;size=7283271&amp;status=done&amp;width=583" alt="机器人.gif"></p>
<p>7、一个介绍**FaceBook Libra **数字货币的小视频，让你三分钟了解Libra是什么？为什么会火。<br /><a href="https://www.yuque.com/attachments/yuque/0/2019/mp4/173770/1563703540704-fcf5cff5-a2f8-4042-a13e-1b7701a90e24.mp4?_lake_card=%7B%22uid%22%3A%221563703538837-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fmp4%2F173770%2F1563703540704-fcf5cff5-a2f8-4042-a13e-1b7701a90e24.mp4%22%2C%22name%22%3A%221563502167857049.mp4%22%2C%22size%22%3A7173767%2C%22type%22%3A%22video%2Fmp4%22%2C%22ext%22%3A%22mp4%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22yCc3P%22%2C%22card%22%3A%22file%22%7D">1563502167857049.mp4</a></p>
<p>8、7月16日，<a href="https://s1-video.huxiucdn.com/b749f206e1e9440da91da022513a2374/c9baaf638ec64bfda4fa14a8c9149394-de20cd89f45b7f2b18feb264383ac5e9-sd.mp4">英国《金融时报》发布影响21世纪9件小事</a>。这9件“小事”大部分诞生于美国。仅担保交易诞生于中国，也就是后来的支付宝。此外二维码、刷脸支付以及共享经济虽然未在中国诞生，但也在中国得到飞速发展，成为大家习以为常的黑科技。</p>
<p>9、<a href="https://shields.io/">Shields</a>, github小徽章你知道怎么生成的吗？Shields上有各种各样的小徽章用来标示项目的状态的信息，还能自定义你想要的徽章。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563194952428-6fe556de-2343-43aa-ae07-0db5794c5171.png#align=left&amp;display=inline&amp;height=210&amp;name=image.png&amp;originHeight=420&amp;originWidth=1378&amp;size=58081&amp;status=done&amp;width=689" alt="image.png"></p>
<p>10、<a href="https://learngitbranching.js.org/">learngitbranching</a>,<a href="https://learngitbranching.js.org/"></a>一个非常棒git互动教程,也是我见过最好的，相信你练习完成后，会对git有更深的认识。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563501581006-d7f8b472-f232-4efa-8358-12aeaf6ad4f2.png#align=left&amp;display=inline&amp;height=387&amp;name=image.png&amp;originHeight=774&amp;originWidth=2174&amp;size=141445&amp;status=done&amp;width=1087" alt="image.png"><br />11、<a href="https://github.com/didi/mpx">MPX</a> 滴滴团队开发的一款致力于提高小程序开发体验的增强型小程序框架。通过Mpx，我们能够以最先进的web开发体验来开发生产性能深度优化的小程序<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563704369336-004c1e64-823b-4eb7-b502-810ec2b1e510.png#align=left&amp;display=inline&amp;height=235&amp;name=image.png&amp;originHeight=470&amp;originWidth=1348&amp;size=61243&amp;status=done&amp;width=674" alt="image.png"><br />12、<a href="https://bellard.org/quickjs/">QuickJS</a> ffmpeg 的作者最近自己写了一个 JavaScript 引擎，等于自己从头实现了一个简化的 V8，太猛了......</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[探索与发现：第4期]]></title>
        <id>https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-4-qi</id>
        <link href="https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-4-qi">
        </link>
        <updated>2019-07-14T15:38:51.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>这里记录一周新鲜有趣的发现与探索。</p>
</blockquote>
<p>1、在现实生活中，我们都知道，做产品想”多、快、好、省“都占有，是不可能的，最多只能选择两样。想要便宜和质量好，就要多时间；想要快还要质量好，那就得多花钱；想要便宜又快，那就得接受难受、质量差。<br />可以利用软件项目<strong>管理金三角</strong>来平衡软件<strong>质量</strong>（产品的质量、客户的满意度）与<strong>范围</strong>（需要实现多少功能）、<strong>时间</strong>（多长时间可以完成）、<strong>成本</strong>（要花多少钱）的关系。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563116835533-0f47c82f-0062-41ed-bed7-528cd8fbbf73.png#align=left&amp;display=inline&amp;height=463&amp;name=image.png&amp;originHeight=926&amp;originWidth=1736&amp;size=145038&amp;status=done&amp;width=868" alt="image.png"></p>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>这里记录一周新鲜有趣的发现与探索。</p>
</blockquote>
<p>1、在现实生活中，我们都知道，做产品想”多、快、好、省“都占有，是不可能的，最多只能选择两样。想要便宜和质量好，就要多时间；想要快还要质量好，那就得多花钱；想要便宜又快，那就得接受难受、质量差。<br />可以利用软件项目<strong>管理金三角</strong>来平衡软件<strong>质量</strong>（产品的质量、客户的满意度）与<strong>范围</strong>（需要实现多少功能）、<strong>时间</strong>（多长时间可以完成）、<strong>成本</strong>（要花多少钱）的关系。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563116835533-0f47c82f-0062-41ed-bed7-528cd8fbbf73.png#align=left&amp;display=inline&amp;height=463&amp;name=image.png&amp;originHeight=926&amp;originWidth=1736&amp;size=145038&amp;status=done&amp;width=868" alt="image.png"></p>
<!-- more -->
<p><br />要平衡好软件质量与时间、成本、范围的关系，需根据”金三角“的三条边，找出来固定的一条或两条边，然后去调整剩下的边，来达到平衡。@极课时间软件之美</p>
<p>2、最近，npm 首席数据官 Laurie 通过一系列数据和分析介绍了 <a href="https://time.geekbang.org/column/article/106217">JavaScript 行业的现状</a>，得出结果：<strong>JavaScript 是当下全球最流行的编程语言，也是有史以来最流行的编程语言。</strong></p>
<p>3、阿里达摩院语音实验室负责人智捷说：说到语音合成，你可能能想到很多（厂商的）名字，但从今天开始，可以翻篇儿了。接着他让具体负责人上台演示了他们新一代TTS的水平，演示了34种语音合成的声音。<a href="https://m.huxiu.com/moment/59105.html">见视频</a></p>
<p>4、国际权威医学杂志《柳叶刀》在今年六月发表了一篇重磅论文，分析了1990年到2017年中国34个省份（包括港澳台）居民的死亡原因。<a href="https://mp.weixin.qq.com/s/dELrbUvHB4iHDyLQHt6PDg">中国人目前的第一大死亡原因，是中风。</a><br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563117846365-6d764d34-91b6-4336-9285-ce334d2f2938.png#align=left&amp;display=inline&amp;height=669&amp;name=image.png&amp;originHeight=1338&amp;originWidth=1098&amp;size=982507&amp;status=done&amp;width=549" alt="image.png"><br />5、<a href="https://zeroserver.io/">Zero</a>，一个有趣的Web框架，所谓Zero的意思是零配置、零烦恼，就是说直接写业务代码即可，其他的事情都交给Zero来搞定。</p>
<p>6、<a href="https://github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md#%E9%97%AE%E9%9D%A2%E8%AF%95%E5%AE%98%E7%9A%84%E9%97%AE%E9%A2%98">Coding Interview University</a>，一套完整的学习手册，帮助你准备google的面试。这里记录作者通过数月的时间整理学习，一步步通过google面试的全套笔记。</p>
<p>7、<a href="https://github.com/kenanpengyou/dir-tree-noter">dir-tree-noter</a>**，**一款很好用的在线生成目录树的小工具，直接拖拽目录进入网页使用便捷，还可以配置目录深度。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562833067504-502f9513-565c-4a02-a94d-fb21260b8b0a.png#align=left&amp;display=inline&amp;height=238&amp;name=image.png&amp;originHeight=476&amp;originWidth=1750&amp;size=78152&amp;status=done&amp;width=875" alt="image.png"><br />8、<a href="https://github.com/yui540/Cowardly-Witch">臆病な魔女</a>，一个超酷炫的日本动漫动画网站，代码开源。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563118497354-473ed9d2-a539-4e12-b0e6-be17631dbf8e.png#align=left&amp;display=inline&amp;height=652&amp;name=image.png&amp;originHeight=1304&amp;originWidth=2488&amp;size=273836&amp;status=done&amp;width=1244" alt="image.png"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[NPM包管理器]]></title>
        <id>https://ducenand.github.io//post/npm-bao-guan-li-qi</id>
        <link href="https://ducenand.github.io//post/npm-bao-guan-li-qi">
        </link>
        <updated>2019-07-14T08:36:50.000Z</updated>
        <summary type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562050872655-a4811ea7-9871-4372-9474-60421c035527.png#align=left&amp;display=inline&amp;height=385&amp;name=image.png&amp;originHeight=770&amp;originWidth=1428&amp;size=69197&amp;status=done&amp;width=714" alt="image.png"></p>
]]></summary>
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562050872655-a4811ea7-9871-4372-9474-60421c035527.png#align=left&amp;display=inline&amp;height=385&amp;name=image.png&amp;originHeight=770&amp;originWidth=1428&amp;size=69197&amp;status=done&amp;width=714" alt="image.png"></p>
<!-- more -->
<p><a name="kQu9L"></a></p>
<h3 id="npm安装和定义">NPM安装和定义</h3>
<blockquote>
<p><strong>NPM</strong>（全称 Node Package Manager，即“node包管理器”）是Node.js默认的、以JavaScript编写的<strong>软件包管理系统</strong>。</p>
</blockquote>
<p>以上是维基百科给NPM的定义。理解软件包管理系统。<br /><strong>软件包管理系统</strong>是在计算机中自动安装、配制、卸载和升级软件包的工具组合，在各种系统软件和应用软件的安装管理中均有广泛应用。<br />比如：PHP中composer、JAVA中maven、LIUNX系统中的yum</p>
<p>NPM软件包管理系统由3部分组成：</p>
<ul>
<li><strong>网站</strong></li>
</ul>
<p>可以通过<a href="https://www.npmjs.com/">https://www.npmjs.com</a>网站,搜索包、管理自己的包和个人信息。</p>
<ul>
<li><strong>注册表（registry）</strong></li>
</ul>
<p>一个巨大的数据库，保存着每个包（package）的信息。</p>
<ul>
<li><strong>命令行工具 (CLI)</strong></li>
</ul>
<p>通过命令行和终端运行，开发者通过CLI与NPM打交道。<br />
<br /><strong>在安装Node.js时会默认安装NPM包管理器</strong>，NPM完全由Javascript写成，和模块没啥区别，所以我们可以<code>npm install -g npm</code> 更新安装自己。</p>
<p>随着前端工程化、模块化的快速发展，前端开发已经离不开npm包管理器了。在我们使用前端各大框架Vue、React、Angluar时，我们只需要<code>npm install [package name]</code>就可以安装使用我们需要的模块包，非常便捷高效。</p>
<p>通过下图我们就能看出npm之火爆。总包量<strong>100多万</strong>，周下载量<strong>114亿</strong>。来自各大洲的开源软件开发者都在使用npm借鉴学习或者分享。同时也是Node.js获得成功重要原因之一。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562048207944-8e13b476-0e68-40f7-8b75-2db48a93ad3a.png#align=left&amp;display=inline&amp;height=281&amp;name=image.png&amp;originHeight=562&amp;originWidth=680&amp;size=41349&amp;status=done&amp;width=340" alt="image.png">
<a name="nDQ9W"></a></p>
<h3 id="npm命令以及使用">NPM命令以及使用</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561983337245-ad4b5fe6-37e5-4e14-ad3f-1bb27a64813a.png#align=left&amp;display=inline&amp;height=267&amp;name=image.png&amp;originHeight=534&amp;originWidth=1592&amp;size=101353&amp;status=done&amp;width=796" alt="image.png"></p>
<p>以上图片罗列出NPM所有的命令，捡几个常用的命令学习；
<a name="Cs98I"></a></p>
<h4 id="npm-install-安装模块">npm install 安装模块</h4>
<p>安装形式：</p>
<pre><code class="language-bash">npm install (with no args, in package dir)
npm install [&lt;@scope&gt;/]&lt;pkg&gt;
npm install [&lt;@scope&gt;/]&lt;pkg&gt;@&lt;tag&gt;
npm install [&lt;@scope&gt;/]&lt;pkg&gt;@&lt;version&gt;
npm install [&lt;@scope&gt;/]&lt;pkg&gt;@&lt;version range&gt;
npm install &lt;folder&gt;
npm install &lt;tarball file&gt;
npm install &lt;tarball url&gt;
npm install &lt;git:// url&gt;
npm install &lt;github username&gt;/&lt;github project&gt;

alias: i,add
common options: [-S|--save|-D|--save-dev|-O|--save-optional] [-E|--save-exact][--no-save][-B|--save-bundle][--dry-run]
</code></pre>
<p><strong>其中：</strong><br />-S与--save 安装到dependenices生产环境中,对应<code>package.json</code>中的<code>dependencies</code></p>
<pre><code class="language-json">//npm i -S express || npm install --save express
&quot;dependencies&quot;: {
    &quot;express&quot;: &quot;^4.17.1&quot;,
}
</code></pre>
<p>-D与--save-dev 安装到devDependenices开发环境中,对应<code>package.json</code>中的<code>devDependencies</code></p>
<pre><code class="language-json">//npm i -D express || npm install --save-dev express
&quot;devDependencies&quot;: {
    &quot;express&quot;: &quot;^4.17.1&quot;
 }
</code></pre>
<p>-O与--save-optional 安装加入到可选阶段依赖对应<code>package.json</code>中的<code>optionalDependencies</code></p>
<pre><code class="language-json">// npm i -O vue || npm install --save-optional
&quot;optionalDependenices&quot;:{
	&quot;vue&quot;: &quot;^2.5.2&quot;
}
</code></pre>
<p>-E与--save-exact 精准安装指定模块版本对应<code>package.json</code>中的<code>dependenicies</code>不会是兼容的模式展示<code>^</code></p>
<pre><code class="language-json">// npm i -E vue || npm install --save-exact 注意没有^
&quot;dependenices&quot;:{
	&quot;vue&quot;: &quot;2.5.2&quot;
}
</code></pre>
<p>--no-save 防止保存到依赖项</p>
<p>-B与--save-bundle 保存的依赖项也将添加到您的<code>bundleDependencies</code>列表中。</p>
<pre><code class="language-json">&quot;dependenices&quot;:{
	&quot;vue&quot;:&quot;^2.5.2&quot;
},
&quot;bundleDependencies&quot;:[&quot;vue&quot;]
</code></pre>
<p>--dry-run 只在命令行可以看到有安装的操作,实际没有安装任何内容到<code>node_modules</code>和<code>package.json</code>中</p>
<p><strong>本地安装</strong></p>
<pre><code class="language-bash">npm i vue
</code></pre>
<p><strong>全局安装</strong></p>
<pre><code class="language-bash">npm i -g vue || npm install --global vue
</code></pre>
<p><strong>即使本地已经下载，强制从远程下载安装</strong></p>
<pre><code class="language-bash">npm i -f vue || npm install --force vue
</code></pre>
<p><a name="xbCM2"></a></p>
<h4 id="npm-uninstall-卸载模块">npm uninstall 卸载模块</h4>
<pre><code class="language-bash">npm uninstall [&lt;@scope&gt;/]&lt;pkg&gt;[@&lt;version&gt;]... [-S|--save-prod][-D|--save-dev][-O|--save-optional] [--no-save]

aliases: un, unlink, remove, rm, r
</code></pre>
<pre><code class="language-bash">npm uninstall -g vue //卸载全局包
npm uninstall vue // 卸载本地包
</code></pre>
<p><a name="DPvz8"></a></p>
<h4 id="npm-search-搜索模块">npm search 搜索模块</h4>
<pre><code class="language-json">npm search [-l|--long] [--json] [--parseable] [--no-description] [search terms ...]

aliases: s, se, find
</code></pre>
<p><a name="2s6we"></a></p>
<h4 id="npm-update-更新模块">npm update 更新模块</h4>
<pre><code class="language-bash">npm update [-g] [&lt;pkg&gt;...]

aliases: up, upgrade, udpate
</code></pre>
<p><a name="c01XS"></a></p>
<h4 id="npm-outdated-检查模块是否过时">npm outdated 检查模块是否过时</h4>
<pre><code class="language-bash">npm outdated [[&lt;@scope&gt;/]&lt;pkg&gt; ...]
</code></pre>
<p><a name="Zf9i1"></a></p>
<h4 id="npm-ls-查看安装模块">npm ls 查看安装模块</h4>
<pre><code class="language-bash">npm ls [[&lt;@scope&gt;/]&lt;pkg&gt; ...]

aliases: list, la, ll
</code></pre>
<p><a name="FUPs3"></a></p>
<h4 id="npm-init-初始化-生成packagejson文件">npm init 初始化 生成package.json文件</h4>
<pre><code class="language-bash">npm init [--force|-f|--yes|-y|--scope]
npm init &lt;@scope&gt; (same as `npx &lt;@scope&gt;/create`)
npm init [&lt;@scope&gt;/]&lt;name&gt; (same as `npx [&lt;@scope&gt;/]create-&lt;name&gt;`)
</code></pre>
<p>默认init 跳过提示步骤</p>
<pre><code class="language-bash">npm init -y || npm init -yes
</code></pre>
<p>安装react应用到my-react-app目录下</p>
<pre><code class="language-bash">npm init react-app ./my-react-app
</code></pre>
<p>init 转成npx对应操作</p>
<pre><code class="language-bash">npm init foo -&gt; npx create-foo
npm init @usr/foo -&gt; npx @usr/create-foo
npm init @usr -&gt; npx @usr/create
</code></pre>
<p><a name="tuxaL"></a></p>
<h4 id="npm-help-term-npm-command-h查看命令帮助">npm help <term> || npm <command> -h查看命令帮助</h4>
<pre><code class="language-bash">npm help install
npm help init
npm install -h || npm install --help
</code></pre>
<p><a name="pkZf5"></a></p>
<h4 id="npm-root-查看包安装路径">npm root 查看包安装路径</h4>
<pre><code class="language-bash">npm root
# 查看全局安装路径
npm root -g
</code></pre>
<p><a name="xKcxP"></a></p>
<h4 id="npm-config-管理npm配置项">npm config 管理npm配置项</h4>
<pre><code class="language-bash">npm config set &lt;key&gt; &lt;value&gt; [-g|--global]
npm config get &lt;key&gt;
npm config delete &lt;key&gt;
npm config list [-l] [--json]
npm config edit
npm get &lt;key&gt;
npm set &lt;key&gt; &lt;value&gt; [-g|--global]

aliases: c
</code></pre>
<p>基本配置</p>
<pre><code class="language-bash">npm config list
; cli configs
metrics-registry = &quot;https://registry.npmjs.org/&quot;
scope = &quot;&quot;
user-agent = &quot;npm/6.4.1 node/v10.15.3 darwin x64&quot;

; userconfig /Users/ducen/.npmrc
//registry.npm.taobao.org/:always-auth = false
init.author.email = &quot;123@.qq.com&quot;
registry = &quot;https://registry.npmjs.org/&quot;

; node bin location = /usr/local/bin/node
; cwd = /Users/ducen/Learn/npm
; HOME = /Users/ducen
; &quot;npm config ls -l&quot; to show all defaults.
</code></pre>
<p><a name="ICBAk"></a></p>
<h4 id="npm-cache-管理模块缓存">npm cache 管理模块缓存</h4>
<pre><code class="language-bash">npm cache add &lt;tarball file&gt;
npm cache add &lt;folder&gt;
npm cache add &lt;tarball url&gt;
npm cache add &lt;name&gt;@&lt;version&gt;
npm cache clean [&lt;path&gt;]

aliases: npm cache clear, npm cache rm

npm cache verify
</code></pre>
<p>默认缓存位置mac<code>~/.npm</code> window <code>%AppData%/npm-cache</code><br />最常用的是清除本地缓存</p>
<pre><code class="language-bash">npm cache clean
</code></pre>
<p><a name="Eo7NX"></a></p>
<h4 id="npm-version-查看模块版本">npm version 查看模块版本</h4>
<pre><code class="language-bash">npm version [&lt;newversion&gt; | major | minor | patch | premajor | preminor | prepatch | prerelease [--preid=&lt;prerelease-id&gt;] | from-git]
</code></pre>
<pre><code class="language-json">npm version
{ npm: '6.4.1',
  ares: '1.15.0',
  cldr: '33.1',
  http_parser: '2.8.0',
  icu: '62.1',
  modules: '64',
  napi: '3',
  nghttp2: '1.34.0',
  node: '10.15.3',
  openssl: '1.1.0j',
  tz: '2018e',
  unicode: '11.0',
  uv: '1.23.2',
  v8: '6.8.275.32-node.51',
  zlib: '1.2.11' 
}
</code></pre>
<p><a name="ruWjd"></a></p>
<h4 id="npm-view-查看模块注册信息">npm view 查看模块注册信息</h4>
<pre><code class="language-json">npm view [&lt;@scope&gt;/]&lt;name&gt;[@&lt;version&gt;] [&lt;field&gt;[.&lt;subfield&gt;]...]
aliases: info, show, v
</code></pre>
<pre><code class="language-bash">npm view vue
vue@2.6.10 | MIT | deps: none | versions: 250
Reactive, component-oriented view layer for modern web interfaces.
https://github.com/vuejs/vue#readme

keywords: vue

dist
.tarball: https://registry.npmjs.org/vue/-/vue-2.6.10.tgz
.shasum: a72b1a42a4d82a721ea438d1b6bf55e66195c637
.integrity: sha512-ImThpeNU9HbdZL3utgMCq0oiMzAkt1mcgy3/E6zWC/G6AaQoeuFdsl9nDhTDU3X1R6FK7nsIUuRACVcjI+A2GQ==
.unpackedSize: 3.0 MB

maintainers:
- yyx990803 &lt;yyx990803@gmail.com&gt;

dist-tags:
beta: 2.6.0-beta.3  csp: 1.0.28-csp     latest: 2.6.10

published 3 months ago by yyx990803 &lt;yyx990803@gmail.com&gt;
</code></pre>
<p>npm view <pkg> dependencies查看模块的依赖关系</p>
<pre><code class="language-bash">npm view express dependecies
{ 
	accepts: '~1.3.7',
  'array-flatten': '1.1.1',
  'body-parser': '1.19.0',
  'content-disposition': '0.5.3',
  'content-type': '~1.0.4',
  cookie: '0.4.0',
  'cookie-signature': '1.0.6',
  debug: '2.6.9',
  depd: '~1.1.2',
  encodeurl: '~1.0.2',
  'escape-html': '~1.0.3',
  etag: '~1.8.1',
  finalhandler: '~1.1.2',
  fresh: '0.5.2',
  'merge-descriptors': '1.0.1',
  methods: '~1.1.2',
  'on-finished': '~2.3.0',
  parseurl: '~1.3.3',
  'path-to-regexp': '0.1.7',
  'proxy-addr': '~2.0.5',
  qs: '6.7.0',
  'range-parser': '~1.2.1',
  'safe-buffer': '5.1.2',
  send: '0.17.1',
  'serve-static': '1.14.1',
  setprototypeof: '1.1.1',
  statuses: '~1.5.0',
  'type-is': '~1.6.18',
  'utils-merge': '1.0.1',
  vary: '~1.1.2' 
  }
</code></pre>
<p>npm view <pkg> repository.url 查看源文件地址</p>
<pre><code class="language-bash">npm view qs repository.url
git+https://github.com/ljharb/qs.git
</code></pre>
<p>npm view <pkg> contributors 查看模块的贡献值</p>
<pre><code class="language-bash">npm view express contributors
[ 'Aaron Heckmann &lt;aaron.heckmann+github@gmail.com&gt;',
  'Ciaran Jessup &lt;ciaranj@gmail.com&gt;',
  'Douglas Christopher Wilson &lt;doug@somethingdoug.com&gt;',
  'Guillermo Rauch &lt;rauchg@gmail.com&gt;',
  'Jonathan Ong &lt;me@jongleberry.com&gt;',
  'Roman Shtylman &lt;shtylman+expressjs@gmail.com&gt;',
  'Young Jae Sim &lt;hanul@hanul.me&gt;' ]

</code></pre>
<p><a name="6runY"></a></p>
<h4 id="npm-adduser-用户登录">npm adduser 用户登录</h4>
<pre><code class="language-bash">npm adduser [--registry=url] [--scope=@orgname] [--always-auth] [--auth-type=legacy]

aliases: login, add-user
</code></pre>
<pre><code class="language-bash">npm adduser
Username: alan-du
Password:
Email: (this IS public) 316358726@qq.com
Logged in as alan-du on https://registry.npmjs.org/.
</code></pre>
<p>用户登录后，可以向npm发送包。
<a name="3YghP"></a></p>
<h4 id="npm-publish-发布模块">npm publish 发布模块</h4>
<pre><code class="language-bash">npm publish [&lt;tarball&gt;|&lt;folder&gt;] [--tag &lt;tag&gt;] [--access &lt;public|restricted&gt;] [--otp otpcode] [--dry-run]

Publishes '.' if no argument supplied
Sets tag 'latest' if no --tag specified
</code></pre>
<p>简单发一个包</p>
<pre><code class="language-bash">#1
mkdir alan-npm-test
#2
cd alan-npm-test
#3
npm init -y
#4
touch index.js
#5
echo &quot;function(){console.log('这是发布的测试包')}()&quot;&gt;index.js
#6
npm adduser
Username: alan-du
Password:
Email: (this IS public) 316358726@qq.com
Logged in as alan-du on https://registry.npmjs.org/.
#7
npm publish
npm notice
npm notice 📦  alan-npm-test@1.0.0
npm notice === Tarball Contents ===
npm notice 227B package.json
npm notice 58B  index.js
npm notice === Tarball Details ===
npm notice name:          alan-npm-test
npm notice version:       1.0.0
npm notice package size:  353 B
npm notice unpacked size: 285 B
npm notice shasum:        4c84a14ed93f4e1e6d2a603da3e70868f71035e4
npm notice integrity:     sha512-IgzS/4dB/vFVD[...]lzv4Fq4Pw2rnA==
npm notice total files:   2
npm notice
+ alan-npm-test@1.0.0
</code></pre>
<p><a name="buRe8"></a></p>
<h4 id="npm-dist-tag-添加删除查看tag">npm dist-tag 添加删除查看tag</h4>
<pre><code class="language-bash">npm dist-tag add &lt;pkg&gt;@&lt;version&gt; [&lt;tag&gt;]
npm dist-tag rm &lt;pkg&gt; &lt;tag&gt;
npm dist-tag ls [&lt;pkg&gt;]

aliases: dist-tags
</code></pre>
<pre><code class="language-bash">#1
npm dist-tag ls
alan-npm-test@1.0.2-0: 1.0.2-0
latest: 1.0.3-1
npm-test@1.0.5: 1.0.5
#2
npm dist-tag rm alan-npm-test alan-npm-test@1.0.2-0
-alan-npm-test@1.0.2-0: alan-npm-test@1.0.2-0
</code></pre>
<p><a name="bEqh7"></a></p>
<h4 id="npm-deprecate-弃用包">npm deprecate 弃用包</h4>
<pre><code class="language-json">npm deprecate &lt;pkg&gt;[@&lt;version&gt;] &lt;message&gt;
</code></pre>
<pre><code class="language-json">npm deprecate alan-npm-test@1.0.3-1 &quot;this package has been deprecated&quot;
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1563087590391-a8f89a49-051e-4a1e-9fc5-5d5e5e610d05.png#align=left&amp;display=inline&amp;height=94&amp;name=image.png&amp;originHeight=188&amp;originWidth=1128&amp;size=20537&amp;status=done&amp;width=564" alt="image.png"><br /><code>&lt;message&gt;</code>不能为汉字等特殊字符</p>
<p><a name="DLOM4"></a></p>
<h4 id="npm-unpublish撤销发布的包">npm unpublish撤销发布的包</h4>
<p>删除某个版本</p>
<pre><code class="language-json">npm unpublish alan-npm-test@1.0.5 
</code></pre>
<p>删除整个npm市场的包</p>
<pre><code class="language-json">npm unpublish alan-npm-test --force 
</code></pre>
<p>24小时内你可以删除自己发布的库，并且没有被下载，之后你就再也不能删除了。</p>
<h3 id="packagejson-介绍">package.json 介绍</h3>
<pre><code class="language-json">
{
  &quot;name&quot;: &quot;express&quot;,
  &quot;description&quot;: &quot;Fast, unopinionated, minimalist web framework&quot;,
  &quot;version&quot;: &quot;4.17.1&quot;,
  &quot;author&quot;: &quot;TJ Holowaychuk &lt;tj@vision-media.ca&gt;&quot;,
  &quot;contributors&quot;: [
    &quot;Aaron Heckmann &lt;aaron.heckmann+github@gmail.com&gt;&quot;,
    &quot;Ciaran Jessup &lt;ciaranj@gmail.com&gt;&quot;,
    &quot;Douglas Christopher Wilson &lt;doug@somethingdoug.com&gt;&quot;,
    &quot;Guillermo Rauch &lt;rauchg@gmail.com&gt;&quot;,
    &quot;Jonathan Ong &lt;me@jongleberry.com&gt;&quot;,
    &quot;Roman Shtylman &lt;shtylman+expressjs@gmail.com&gt;&quot;,
    &quot;Young Jae Sim &lt;hanul@hanul.me&gt;&quot;
  ],
  &quot;license&quot;: &quot;MIT&quot;,
  &quot;repository&quot;: &quot;expressjs/express&quot;,
  &quot;homepage&quot;: &quot;http://expressjs.com/&quot;,
  &quot;keywords&quot;: [
    &quot;express&quot;,
    &quot;framework&quot;,
    &quot;sinatra&quot;,
    &quot;web&quot;,
    &quot;rest&quot;,
    &quot;restful&quot;,
    &quot;router&quot;,
    &quot;app&quot;,
    &quot;api&quot;
  ],
  &quot;dependencies&quot;: {
    &quot;accepts&quot;: &quot;~1.3.7&quot;,
    &quot;array-flatten&quot;: &quot;1.1.1&quot;,
 		...
  },
  &quot;devDependencies&quot;: {
    &quot;after&quot;: &quot;0.8.2&quot;,
    &quot;connect-redis&quot;: &quot;3.4.1&quot;,
   	...
  },
  &quot;engines&quot;: {
    &quot;node&quot;: &quot;&gt;= 0.10.0&quot;
  },
  &quot;files&quot;: [
    &quot;LICENSE&quot;,
    &quot;History.md&quot;,
    &quot;Readme.md&quot;,
    &quot;index.js&quot;,
    &quot;lib/&quot;
  ],
  &quot;scripts&quot;: {
    &quot;lint&quot;: &quot;eslint .&quot;,
    &quot;test&quot;: &quot;mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/&quot;,
    &quot;test-ci&quot;: &quot;istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --require test/support/env --reporter spec --check-leaks test/ test/acceptance/&quot;,
    &quot;test-cov&quot;: &quot;istanbul cover node_modules/mocha/bin/_mocha -- --require test/support/env --reporter dot --check-leaks test/ test/acceptance/&quot;,
    &quot;test-tap&quot;: &quot;mocha --require test/support/env --reporter tap --check-leaks test/ test/acceptance/&quot;
  }
}
</code></pre>
<p><a name="qKeJh"></a></p>
<h4 id="name">name</h4>
<p>在package.json中最重要的就是name和version字段。他们都是必须的，如果没有就无法install。name和version一起组成的标识在假设中是唯一的。改变包应该同时改变version。
<a name="Tpyw6"></a></p>
<h4 id="version">version</h4>
<p>version必须能被<a href="https://github.com/isaacs/node-semver">node-semver</a>解析，它被包在npm的依赖中。（要自己用可以执行<code>npm install semver</code>）<br />可用的“数字”或者“范围”见下文<strong>语义化版本控制范围SemVer</strong>.
<a name="lk9iR"></a></p>
<h4 id="description">description</h4>
<p>放简介，字符串，方便在<code>npm search</code>中搜索
<a name="ANz7c"></a></p>
<h4 id="keywords">keywords</h4>
<p>关键字，数组、字符串，方便在<code>npm search</code>中搜索
<a name="qFi4h"></a></p>
<h4 id="bugs">bugs</h4>
<p>项目提交问题的url和（或）邮件地址</p>
<pre><code class="language-json">&quot;bugs&quot;: {
    &quot;url&quot;: &quot;https://github.com/vuejs/vue/issues&quot;
 }
</code></pre>
<p><a name="JJOSZ"></a></p>
<h4 id="license">license</h4>
<p>指定一个许可证，让人知道使用的权利和限制的。<br />最简单的方法是，假如你用一个像BSD或者MIT这样通用的许可证，就只需要指定一个许可证的名字，像这样：</p>
<pre><code class="language-json">&quot;license&quot;: &quot;MIT&quot;,
</code></pre>
<p>如果你又更复杂的许可条件，或者想要提供给更多地细节，可以这样:</p>
<pre><code class="language-json">&quot;licenses&quot; : [
  { 
   &quot;type&quot; : &quot;MyLicense&quot;, 
   &quot;url&quot; : &quot;http://github.com/owner/project/path/to/license&quot;
  }
]
</code></pre>
<p><a name="jlsp4"></a></p>
<h4 id="repository">repository</h4>
<p>指定你的代码存放的地方。这个对希望贡献的人有帮助。如果git仓库在github上，那么<code>npm docs</code>命令能找到你。<br />这样做：</p>
<pre><code class="language-json"> &quot;repository&quot;: {
    &quot;type&quot;: &quot;git&quot;,
    &quot;url&quot;: &quot;git+https://github.com/vuejs/vue.git&quot;
  },
</code></pre>
<p>URL应该是公开的（即便是只读的）能直接被未经过修改的版本控制程序处理的url。不应该是一个html的项目页面。因为它是给计算机看的。</p>
<p><a name="JDcIm"></a></p>
<h4 id="scripts">scripts</h4>
<p>“scripts”是一个由脚本命令组成的hash对象，他们在包不同的生命周期中被执行。key是生命周期事件，value是要运行的命令。</p>
<pre><code class="language-json">&quot;scripts&quot;: {
    &quot;dev&quot;: &quot;rollup -w -c scripts/config.js --environment TARGET:web-full-dev&quot;,
		...
 },
</code></pre>
<p>更多详细请看 <a href="https://npmjs.org/doc/misc/npm-scripts.html">npm-scripts(7)</a>
<a name="obARB"></a></p>
<h4 id="config">config</h4>
<pre><code class="language-json">&quot;config&quot;: {
    &quot;commitizen&quot;: {
      &quot;path&quot;: &quot;./node_modules/cz-conventional-changelog&quot;
    }
 }
</code></pre>
<p>config对象可用于设置在升级过程中持久存在的程序包脚本中使用的配置参数。例如，如果包具有以下内容：
<a name="v2B9P"></a></p>
<h4 id="dependencies">dependencies</h4>
<p>生产依赖包，请不要将测试或过渡性的依赖放在<code>dependencies</code>中。</p>
<pre><code class="language-json">&quot;dependencies&quot;: {
    &quot;accepts&quot;: &quot;~1.3.7&quot;,
    &quot;array-flatten&quot;: &quot;1.1.1&quot;,
 		...
 },
</code></pre>
<p><a name="kJZnq"></a></p>
<h4 id="devdependencies">devDependencies</h4>
<p>开发依赖包，如果有人要使用你的模块，那么他们可能不需要你开发使用的外部测试或者文档框架。<br />在这种情况下，最好将这些附属的项目列在<code>devDependencies</code>中。</p>
<pre><code class="language-json">&quot;devDependencies&quot;: {
    &quot;after&quot;: &quot;0.8.2&quot;,
    &quot;connect-redis&quot;: &quot;3.4.1&quot;,
   	...
 },
</code></pre>
<p><a name="ffgzX"></a></p>
<h3 id="语义化版本控制规范semversemantic-versioning">语义化版本控制规范（SemVer）Semantic Versioning</h3>
<p><a name="fLVKc"></a></p>
<h4 id="semver规则">SemVer规则</h4>
<p>版本格式：主版本号.次版本号.修订号，版本号递增规则如下：</p>
<ol>
<li>主版本号：当你做了不兼容的 API 修改;</li>
<li>次版本号：当你做了向下兼容的功能性新增;</li>
<li>修订号：当你做了向下兼容的问题修正;</li>
</ol>
<p>先行版本号及版本编译元数据可以加到“主版本号.次版本号.修订号”的后面，作为延伸。<br />当主版本号升级后，次版本号和修订号需要重置为0，次版本号进行升级后，修订版本需要重置为0。</p>
<p><a name="93jNn"></a></p>
<h4 id="semver-两个概念">SemVer 两个概念</h4>
<ul>
<li>固定版本：是指例如 0.4.1、1.2.7、1.2.4-beta.0 这样表示包的特定版本的字符串；</li>
<li>范围版本：是对满足特定规则的版本的一种表示，例如 1.2.3-2.3.4、1.x、^0.2、&gt;1.4；
<a name="Po3hr"></a></li>
</ul>
<h4 id=""></h4>
<p><a name="yXDl9"></a></p>
<h4 id="先行版本pre-release-version">先行版本（<strong>Pre-release Version</strong>）</h4>
<p>先行版本号可以作为发布正式版之前的版本，格式是在修订版本号后面加上一个连接号（-），再加上一连串以点（.）分割的标识符，标识符可以由英文、数字和连接号（[0-9A-Za-z-]）组成。</p>
<pre><code class="language-json">1.0.0-alpha
1.0.0-alpha.1
1.0.0-0.3.7
1.0.0-x.7.z.92
</code></pre>
<p><strong>常见的先行版本号名称：</strong></p>
<ul>
<li>alpha：是内部测试版,一般不向外部发布,会有很多Bug.一般只有测试人员使用;</li>
<li>beta：也是测试版，这个阶段的版本会一直加入新的功能。在Alpha版之后推出;</li>
<li>rc：Release　Candidate)  系统平台上就是发行候选版本。RC版不会再加入新的功能了，主要着重于除错;</li>
</ul>
<p><a name="fxTTg"></a></p>
<h4 id="依赖规则">依赖规则</h4>
<p>npm依赖的规则，有<code>^</code>、<code>~</code>、<code>&gt;</code>、<code>&lt;</code>、<code>=</code>、<code>&gt;=</code>、<code>&lt;=</code>、<code>-</code>、<code>||</code>、<code>x</code>、<code>X</code>、<code>*</code> 等符号；</p>
<p><code>**^**</code>：表示同一主版本号，不小于当前指定版本号的版本好号。</p>
<pre><code class="language-json">dependencies:{
	vue:&quot;^2.6.2&quot; 
}
// npm install 安装最新依赖，会下载2.6.3、2.7.1 不会下载2.6.1、3.0.0
</code></pre>
<p><code>~</code> ：表示同一主版本号和次版本号中，不小于指定版本号的版本号。</p>
<pre><code class="language-json">dependencies:{
	vue:&quot;~2.6.2&quot; 
}
// npm install 安装最新依赖，会下载2.6.3、2.6.6 不会下载2.6.1 2.7.0
</code></pre>
<p><code>&lt;、=、&gt;=、&lt;=、-</code>：用来指定一个版本号范围。</p>
<pre><code class="language-json">dependencies:{
	vue:&quot;&gt;2.6.2&quot;, 
},
&quot;engines&quot;: {
  node: &quot;&gt;= 0.10.0&quot;
},
//`1.1.1 - 1.2.0`
//注意使用 `-` 的时候，必须两边都有空格。
</code></pre>
<p><code>||</code>：表示或</p>
<pre><code class="language-json">dependencies:{
	vue:&quot;&lt;2.6.2 || &gt;2.5.1&quot;, 
},
</code></pre>
<p><code>x</code>、<code>X</code>、<code>*</code>：表示通配符</p>
<pre><code class="language-json">dependencies:{
	qs:&quot;*&quot;,
  vue:&quot;2.x&quot;
},
//`*` 对应所有版本号
//`2.x` 对应所有主版本号为 2 的版本号
</code></pre>
<p><a href="https://www.cnblogs.com/PeunZhang/p/5553574.html">npm常用命令详解</a><br /><a href="https://www.jianshu.com/p/7bba18925fbf">一分钟教你发布一个npm包</a><br /><a href="https://www.jianshu.com/p/739e142923b2">NPM模块的TAG管理</a><br /><a href="https://docs.npmjs.com/files/package.json">package.json英文文档</a><br /><a href="https://github.com/ericdum/mujiang.info/issues/6/">package.json中文文档</a><br /><a href="https://semver.org/lang/zh-CN/">Semver 中文网</a><br /><a href="https://www.jianshu.com/p/a7490344044f">Semver 语义化版本规范</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[探索与发现：第3期]]></title>
        <id>https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-3-qi</id>
        <link href="https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-3-qi">
        </link>
        <updated>2019-07-07T14:42:33.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>这里记录一周新鲜有趣的发现与探索。</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562509252905-95ad8c2e-ac12-4660-a1f6-296e7f3f0edd.png#align=left&amp;display=inline&amp;height=559&amp;name=image.png&amp;originHeight=1118&amp;originWidth=1590&amp;size=2440544&amp;status=done&amp;width=795" alt="image.png"></p>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>这里记录一周新鲜有趣的发现与探索。</p>
</blockquote>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562509252905-95ad8c2e-ac12-4660-a1f6-296e7f3f0edd.png#align=left&amp;display=inline&amp;height=559&amp;name=image.png&amp;originHeight=1118&amp;originWidth=1590&amp;size=2440544&amp;status=done&amp;width=795" alt="image.png"></p>
<!-- more --> 
<p><br />最近上海是发布了垃圾分类指导意见，不按垃圾分类，随意倾倒垃圾，将会处以50到200元的罚款。<br />随着来自上海大妈灵活拷问，你是什么垃圾？在网络爆火。<br />突然之间干垃圾，湿垃圾都要分类，只要和垃圾有关都能赚钱，淘宝6月垃圾桶卖了300万只，一秒一支直接卖断货，上海饿了么直接推出跑腿扔垃圾服务，12块一单。紧紧6月成立的垃圾分类相关的公司就有135家，垃圾分类相关股票也一路飞涨。把握住时代的红利，垃圾也能让你赚的盆满钵满。时代变革之下的创业机会就是这么的猝不及防。<br /></p>
<p><strong>你知道世界上垃圾分类做的最好的是哪个国家吗？</strong></p>
<p><br />日本从90年代就开始进行垃圾分类的教育，到现在已经有30年一代人的时间了。在日本街头走的时候你会发现一般没有垃圾桶，是因为他们有非常好的垃圾分类习惯。在日本有些地区，垃圾分类已经到了令人发指的程度。要分成45类，而且垃圾的投放是有时间限制的，周一只能扔布匹，周二只能扔报纸，周三只能扔厨余，如果错过了这个时间，你就只能等到下一周再扔。在日本如果你随意丢垃圾会有什么结果呢。我们会罚款50-200元不等，但在日本最高会处以五年以下监禁，罚款一千万日语，有人说在日本最被人看不起的行为就是乱丢垃圾。所以我们经常看到在足球比赛的时候，日本的哪些观众不会留下一点点的垃圾。<br />虽然垃圾分类这件事看起来很繁琐，让人感觉挺烦的，但是如果我们真正做到了，不光对环境有保护，而且也提现了一个民族素质的提高。</p>
<p>1、根据交通运输部政策，7月1日起，全国ETC车载装置设备进入免费时代，现在通过微信可以直接办理ETC,目前有50多个小程序支持ETC服务，<a href="https://mp.weixin.qq.com/s/8rrAoCuD3nzAMuZvADHHtg">微信城市服务的ETC</a>服务也覆盖了8个省份118个城市，更多城市正在接入中。<br />2、英国品牌评估机构“品牌金融”(Brand Finance)发布“<a href="https://tech.sina.com.cn/i/2019-06-30/doc-ihytcitk8689146.shtml?cref=cj">2019全球最有价值的100大科技品牌</a>”(Brand Finance Tech 100 2019)榜单，前五位依旧都是美国品牌，美国之外价值最高的品牌是韩国的三星电子，共有四个中国品牌进入了前十位。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562417816319-89eed674-7ad1-444b-8057-111d4022b20e.png#align=left&amp;display=inline&amp;height=348&amp;name=image.png&amp;originHeight=696&amp;originWidth=1250&amp;size=650330&amp;status=done&amp;width=625" alt="image.png"><br />3、<a href="https://user.guancha.cn/main/content?id=135904&amp;s=fwzxfbbt">打水漂也有世界冠军？最远可达到100米！</a></p>
<p><img src="https://cdn.nlark.com/yuque/0/2019/gif/173770/1562418308036-41d5c9b7-15bd-423d-93a5-d8d59823a1ac.gif#align=left&amp;display=inline&amp;height=228&amp;name=20190630193119764.gif&amp;originHeight=228&amp;originWidth=400&amp;size=3213150&amp;status=done&amp;width=400" alt="20190630193119764.gif"><br />4、近日顶尖学术刊物《科学》杂志公布：<a href="https://mp.weixin.qq.com/s/df64fLQsVqRJgC63jqmU9w">美国卡内基梅隆大学教授贺斌团队开发出了一种可与大脑无创连接的脑机接口，能让人用意念控制机器臂连续、快速运动</a>。<br /><img src="https://cdn.nlark.com/yuque/0/2019/gif/173770/1562418458452-b13ca95d-c020-485c-87e0-0f215527a6f1.gif#align=left&amp;display=inline&amp;height=248&amp;name=640.gif&amp;originHeight=248&amp;originWidth=480&amp;size=1230660&amp;status=done&amp;width=480" alt="640.gif"><br />5、滴滴首次展示网约车安全管理体系全景图，全景图显示，滴滴围绕探索新业态安全管理体系、让出行更安全的使命，确立了三大安全目标：降低安全事件发生概率、对安全事件处置妥当、尽职尽责。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562419127149-12fe173d-a227-4d3b-9a55-00c68ab4837c.png#align=left&amp;display=inline&amp;height=627&amp;name=image.png&amp;originHeight=1254&amp;originWidth=2464&amp;size=1835020&amp;status=done&amp;width=1232" alt="image.png"></p>
<p>6、剑桥大学研究员：<a href="https://view.inews.qq.com/a/TEC2019070400828408?uid=">比特币一年消耗640亿度电，比整个瑞士还多</a>。比特币每笔交易消耗的能量，超过了全球其它所有银行单笔交易所消耗能量的总和。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562421498503-73857303-3e22-4f11-a4f6-390c2be0a3b8.png#align=left&amp;display=inline&amp;height=446&amp;name=image.png&amp;originHeight=892&amp;originWidth=1342&amp;size=1961581&amp;status=done&amp;width=671" alt="image.png"><br />7、长时间不锻炼，突然间过渡锻炼，可能会导致<strong>横纹肌肉溶解症</strong>，7月5日有一条新闻，说一大学生想利用假期健身，锻炼了3天后身体不适，“小便酱油色”。被诊断为横纹肌肉溶解症，所幸发现及时，没有出现明显肾衰竭。<br />横纹肌的病因十分复杂，国外有人研究指出获得性病因就有190余种，遗传性相关的病因40余种，常见的原因有过量运动、肌肉挤压伤、缺血、代谢紊乱（低钾血症、甲状腺功能减退、糖尿病酮症酸中毒）、极端体温（高热、低热）、药物、毒物、自身免疫、感染等。<br />8、<a href="https://mp.weixin.qq.com/s/6WH81a1ZGWqhcvLQ6L9HGA">2019「K12网校」大爆发，决战在线教育千亿美元市值深度解析</a>，当年的千团大战、网约车大战、共享单车大战如今的K12在线辅导混战，互联网行业的寡头战争，也终于打到了互联网教育行业。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562510425901-cf0b0237-5f04-4b65-934c-5d9d5290742a.png#align=left&amp;display=inline&amp;height=427&amp;name=image.png&amp;originHeight=854&amp;originWidth=1286&amp;size=1585817&amp;status=done&amp;width=643" alt="image.png"><br />9、<a href="https://www.aixcoder.com/#/">AiXcoder</a>是一个AI驱动的代码提示工具。利用人工智能技术帮助程序员提高编程效率，节省时间的工具。目前支持的编程语言有Java，Python，C++。支持的编辑器有IntelliJ IDEA，Eclipse，PyCharm，Android Studio，Visual Studio Code。<br />10、近日ECMA TC39 委员会（Technical Committee 39，简称TC39）在 GitHub 上通过了一条 ECMAScript 语法特性的草案，即被称之为弱类型语言的 JavaScript 中，<strong>类的私有属性修饰符将以「#」字符来表</strong>示；<br />实例如下：</p>
<pre><code class="language-javascript">class Counter extends HTMLElement {
  #x = 0;

  clicked() {
    this.#x++;
    window.requestAnimationFrame(this.render.bind(this));
  }

  constructor() {
    super();
    this.onclick = this.clicked.bind(this);
  }

  connectedCallback() { this.render(); }

  render() {
    this.textContent = this.#x.toString();
  }
}
window.customElements.define('num-counter', Counter);
</code></pre>
<p>这一做法遭到众多Javascript开发者强烈吐槽，丑爆了。<a href="https://zhuanlan.zhihu.com/p/46784477?utm_source=wechat_session&amp;utm_medium=social&amp;utm_oi=870568515852210176">更多讨论</a><br />11、<a href="https://github.com/eashish93/imgsquash">imgsquash</a> 基于 Node.js 的图像压缩服务，有 Web 界面，react和next.js框架。非常方便部署成微服务。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562509885379-b5de4d84-414d-42f8-a1cb-cef52a22efaa.png#align=left&amp;display=inline&amp;height=366&amp;name=image.png&amp;originHeight=732&amp;originWidth=1588&amp;size=241466&amp;status=done&amp;width=794" alt="image.png"><br />12、<a href="https://github.com/matomo-org/matomo">matomo</a> 网站访问统计工具，类似 Google Analytics，代码开源，可以自己部署服务。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1562509925493-dff1c3b6-1c12-4ca4-82da-7d99cba8ce81.png#align=left&amp;display=inline&amp;height=478&amp;name=image.png&amp;originHeight=956&amp;originWidth=1570&amp;size=540338&amp;status=done&amp;width=785" alt="image.png"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[探索与发现：第2期]]></title>
        <id>https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-2-qi</id>
        <link href="https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-2-qi">
        </link>
        <updated>2019-06-30T06:25:53.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>这里记录一周新鲜有趣的发现和探索。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>这里记录一周新鲜有趣的发现和探索。</p>
</blockquote>
<!-- more --> 
<p>1、6月24日中国篮球史上第一个世界冠军。中国女篮19-13胜匈牙利女篮，夺得3X3篮球世界杯女篮冠军。中国3X3女篮同时获得2020年奥运会的参赛资格，创造历史！</p>
<p>2、随着《千与千寻》动画在中国大陆上映，真贵的配音现场片段也随即爆光，一部经典的动画作品真的少不了强大的配音。<br /><a href="https://www.yuque.com/attachments/yuque/0/2019/mp4/173770/1561864085626-3a16701f-2797-4786-8938-a2bfa1c108f4.mp4?_lake_card=%7B%22uid%22%3A%221561864067280-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fmp4%2F173770%2F1561864085626-3a16701f-2797-4786-8938-a2bfa1c108f4.mp4%22%2C%22name%22%3A%222914292747ad42a1be5f85c153033562-9adf1cf7bb43e0e1395fd9821fa3a5fd-sd.mp4%22%2C%22size%22%3A9985101%2C%22type%22%3A%22video%2Fmp4%22%2C%22ext%22%3A%22mp4%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22UnInT%22%2C%22card%22%3A%22file%22%7D">2914292747ad42a1be5f85c153033562-9adf1cf7bb43e0e1395fd9821fa3a5fd-sd.mp4</a></p>
<p>3、哈佛最新研究：AI预测精神分裂，准确率达93%，来自哈佛大学和埃默里大学的科学团队已经研究出一套机器学习方法，它可以通过分析一个人表达出的言语，预测这个人以后是否会患精神分裂症。</p>
<p>4、6月24据猫眼数据，2019年度中国电影总票房突破300亿元。这个速度比2018年突破300亿晚了一周，去年突破300亿的时间点是2018年6月16日。<br /><strong>截至目前的2019票房前十：</strong><br />1.《流浪地球》<br />2.《复仇者联盟4:终局之战》<br />3.《疯狂的外星人》<br />4.《飞驰人生》<br />5.《大黄蜂》<br />6.《惊奇队长》<br />7.《比悲伤更悲伤的故事》<br />8.《哥斯拉2：怪兽之王》<br />9.《阿丽塔：战斗天使》<br />10.《反贪风暴4》</p>
<p>5、比尔·盖茨出席Village Global说到软件是一个很神奇的东西，而且软件是未来数字世界的先决条件。 <br /><a href="https://www.yuque.com/attachments/yuque/0/2019/mp4/173770/1561864916438-443db94c-4b5a-4411-a8fb-d1fb2e03a13d.mp4?_lake_card=%7B%22uid%22%3A%221561864913795-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fmp4%2F173770%2F1561864916438-443db94c-4b5a-4411-a8fb-d1fb2e03a13d.mp4%22%2C%22name%22%3A%22f914a80cdada4e86935ad59dc556901c-9a3ca7dcacc1812df5698670918c4052-sd.mp4%22%2C%22size%22%3A12974736%2C%22type%22%3A%22video%2Fmp4%22%2C%22ext%22%3A%22mp4%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%222qfmo%22%2C%22card%22%3A%22file%22%7D">f914a80cdada4e86935ad59dc556901c-9a3ca7dcacc1812df5698670918c4052-sd.mp4</a></p>
<p>6、谷歌刚刚创建时使用的是一个极不显眼的名字“Backrub”（网络爬虫），耐克的曾用名则是 Blue Ribbon Sports（蓝丝带体育），而雅虎最初创建时曾命名为“杰瑞和大卫的万维网指南”。通过公司的改名史，挖掘一个公司背后故事。<br /><a href="https://www.yuque.com/attachments/yuque/0/2019/mp4/173770/1561865245086-4e030b9d-0acd-4435-aed3-79aa958a7ee1.mp4?_lake_card=%7B%22uid%22%3A%221561865242174-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2019%2Fmp4%2F173770%2F1561865245086-4e030b9d-0acd-4435-aed3-79aa958a7ee1.mp4%22%2C%22name%22%3A%2263dfb704f7684249a777508ba088e1bc-91a8eef67cb2a526bf1e811d854f2873-sd.mp4%22%2C%22size%22%3A13971233%2C%22type%22%3A%22video%2Fmp4%22%2C%22ext%22%3A%22mp4%22%2C%22progress%22%3A%7B%22percent%22%3A0%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22HN71z%22%2C%22card%22%3A%22file%22%7D">63dfb704f7684249a777508ba088e1bc-91a8eef67cb2a526bf1e811d854f2873-sd.mp4</a></p>
<p>7、近日，泰国政府出台了一项新法规，在家中抽烟将被视作家暴罪，可能遭刑事检控及需戒烟。泰国妇女事务和家庭发展部主任称，在家中吸烟可能对健康有害，因此是对生活在同一屋檐下其他人的一种暴力形式。该法案将于8月20日生效。</p>
<p>8、<a href="https://haokan.baidu.com/v?pd=wisenatural&amp;vid=6165330621953265666">东京大学研发团队研发出房间任意位置都可无线充电的系统。</a>该系统是通过在墙壁和地板上埋入供电机器，产生磁场，从而向室内空间进行送电。即使不插插座也能给电器充电，进入这个空间内手机等电器都自动充电，研究团队称该无线充电设备对人体健康无影响。</p>
<p>9、<strong>街舞</strong>等四项新运动有望加入2024巴黎奥运会。当地时间6月25日，国际奥委会第134届全会在瑞士洛桑召开，大会一致通过一项建议：<strong>滑板、攀岩、冲浪和霹雳舞</strong>有望成为2024巴黎奥运会的新项目。这四项运动将进入观察期，最终决定将在2020年12月的国际奥委会执委会上做出。</p>
<p>10、20世纪60年代，编程被看作是适合女孩子的工作，女性时尚杂志《时尚》（Cosmopolitan Magazine）称，编程这个工作很适合女孩子，收入很高（实习生8000美金一年，高级系统分析师2万美金一年；1960年的2万美金相当于现在的17万美金），并且刊登了 IBM 的系统工程师 Ann Richardson 的照片。——<a href="https://www.huxiu.com/article/305417.html">计算机刚出现的时候，是用女人头做计算能力单位的</a><br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561871830018-58ce3948-7b8f-49bb-9908-d4c6de4afdd6.png#align=left&amp;display=inline&amp;height=570&amp;name=image.png&amp;originHeight=1140&amp;originWidth=1416&amp;size=1772949&amp;status=done&amp;width=708" alt="image.png"></p>
<p>11、<a href="https://tiptap.scrumpy.io/">Tiptap</a> 基于vue.js的无渲染编辑器，该编辑器基于Prosemirror，完全可扩展且无渲染。您可以轻松地将自定义节点添加为Vue组件。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561872015343-7e5c577c-59e4-47fb-8b55-668abc391cf5.png#align=left&amp;display=inline&amp;height=271&amp;name=image.png&amp;originHeight=542&amp;originWidth=1288&amp;size=69973&amp;status=done&amp;width=644" alt="image.png"></p>
<p>12、<a href="https://github.com/callstack/linaria">Linaria</a> 一个可以在JS中编写CSS的react模块，运行时为零，在构建期间将CSS提取到CSS文件。</p>
<p>13、<a href="https://github.com/jdan/cleaver">Cleaver</a>是一个基于HTML5，可以用最短的时间做出超炫幻灯片的小工具。<br /><img src="https://cdn.nlark.com/yuque/0/2019/gif/173770/1561872657674-a9789288-dd2f-4e79-96c5-d0f62d1163d6.gif#align=left&amp;display=inline&amp;height=768&amp;name=68747470733a2f2f692e636c6f756475702e636f6d2f634973734b466a6342362e676966.gif&amp;originHeight=768&amp;originWidth=1092&amp;size=173254&amp;status=done&amp;width=1092" alt="68747470733a2f2f692e636c6f756475702e636f6d2f634973734b466a6342362e676966.gif"><br />
14、<a href="https://tucao.qq.com/">“吐个槽”反馈平台</a> 腾讯推出的工具，几行代码就可以为页面加入一个互动社区，可以接入应用程序、小程序、WEB、H5、微信公众号等各端。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[依赖Nodejs]]></title>
        <id>https://ducenand.github.io//post/yi-lai-nodejs</id>
        <link href="https://ducenand.github.io//post/yi-lai-nodejs">
        </link>
        <updated>2019-06-27T00:31:51.000Z</updated>
        <summary type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1560946813959-89c89678-4d53-4294-a0ce-44ef96244af2.png#align=left&amp;display=inline&amp;height=352&amp;name=image.png&amp;originHeight=704&amp;originWidth=1748&amp;size=303588&amp;status=done&amp;width=874" alt="image.png">
<a name="mxMDY"></a></p>
<h3 id="背景">背景</h3>
<p>在<a href="https://ducenand.github.io/post/webpack-yu-gruntgulp-de-qu-bie/">前端历史演变</a>中已经提到，Nodejs的爆发从2009年开始。Nodejs的出现，基于作者Ryan Dahl 对Web开发高性能的追求，要达到高性能，异步IO/事件驱动是基本原则。对比一些高级语言，最终选择Javascript作为开发语言,由于Javascript天生的事件驱动和单线程，奠定了Nodejs编写高性能Web服务轻而易举。</p>
]]></summary>
        <content type="html"><![CDATA[<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1560946813959-89c89678-4d53-4294-a0ce-44ef96244af2.png#align=left&amp;display=inline&amp;height=352&amp;name=image.png&amp;originHeight=704&amp;originWidth=1748&amp;size=303588&amp;status=done&amp;width=874" alt="image.png">
<a name="mxMDY"></a></p>
<h3 id="背景">背景</h3>
<p>在<a href="https://ducenand.github.io/post/webpack-yu-gruntgulp-de-qu-bie/">前端历史演变</a>中已经提到，Nodejs的爆发从2009年开始。Nodejs的出现，基于作者Ryan Dahl 对Web开发高性能的追求，要达到高性能，异步IO/事件驱动是基本原则。对比一些高级语言，最终选择Javascript作为开发语言,由于Javascript天生的事件驱动和单线程，奠定了Nodejs编写高性能Web服务轻而易举。</p>
<!-- more --> 
<p><a name="cutZq"></a></p>
<h3 id="简单了解nodejs">简单了解Nodejs</h3>
<blockquote>
<p>Node.js 是一个基于 <strong>Chrome V8 引擎</strong>的 <strong>JavaScript 运行环境</strong>。 
Node.js 使用了一个<strong>事件驱动</strong>、<strong>非阻塞式 I/O</strong> 的模型，使其轻量又高效。</p>
</blockquote>
<p>以上是官方给出的解释，惯例我们还是抽取关键词理解。
<a name="fTNxv"></a></p>
<h4 id="chrome-v8-引擎介绍">Chrome V8 引擎介绍</h4>
<p>V8 引擎是Chrome于2008年9月2日发布开源。V8使用C++开发，相比其它的JavaScript的引擎转换成<a href="https://baike.baidu.com/item/%E5%AD%97%E8%8A%82%E7%A0%81">字节码</a>或<a href="https://baike.baidu.com/item/%E8%A7%A3%E9%87%8A%E6%89%A7%E8%A1%8C">解释执行</a>，V8将其编译成原生<a href="https://baike.baidu.com/item/%E6%9C%BA%E5%99%A8%E7%A0%81">机器码</a>（<a href="https://baike.baidu.com/item/IA-32">IA-32</a>, <a href="https://baike.baidu.com/item/x86-64">x86-64</a>, <a href="https://baike.baidu.com/item/ARM/7518299">ARM</a>, or <a href="https://baike.baidu.com/item/MIPS">MIPS</a> CPUs），并且使用了如内联缓存（inline caching）等方法来提高性能。有了这些功能，JavaScript程序在V8引擎下的<strong>运行速度媲美二进制程序</strong>。<br />Chrome浏览器在Webkit渲染引擎中使用v8引擎来提高浏览器的渲染性能。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1560989504270-19142662-a597-434f-bda5-9cf7fe586b73.png#align=left&amp;display=inline&amp;height=311&amp;name=image.png&amp;originHeight=622&amp;originWidth=1192&amp;size=302086&amp;status=done&amp;width=596" alt="image.png"><br />上图是webkit大致结构，红色部分是webkit的默认引擎，在谷歌系列产品中被替换为v8引擎；<br />Nodejs是站在“<strong>巨人的肩膀</strong>”上进行一系列的封装，它的高性能，离不开Chorme V8引擎。
<a name="OOZYg"></a></p>
<h4 id="javascript-运行环境">JavaScript 运行环境</h4>
<p>Javascript 是一个静态脚本语言，运行时必须要借助于引擎才能运行。<br />Javascript 运行环境一般分为两种：</p>
<ul>
<li>浏览器运行环境 （ 通常我们写的js代码要在浏览器中才能运行）</li>
<li>非浏览器运行环境 （比如Nodejs,借助于V8引擎实现运行的环境）
<a name="LSuE2"></a></li>
</ul>
<h4 id="事件驱动">事件驱动</h4>
<p>我们在Javascript中注册个事件（回调函数）。但这个事件不是马上执行。只有等事件被触发的时候，才会去执行这个事件（回调函数）。这种形式就是事件驱动。
<a name="jBoeo"></a></p>
<h4 id="非阻塞-io">非阻塞 I/O</h4>
<p>**阻塞：**前一个程序未执行完就得一直等待。比如当你打电话问个问题时，那边说你等等我给你查查，这时候你电话仍然是挂起的，等待等待，直到拿到结果。 <br />
**非阻塞：**前一个程序未执行完时可以挂起，继续执行其他程序，等到使用时再执行。比如当你打电话过去问一个问题，然后挂电话，等那边找到结果就打电话给你。查问题这段时间，你该干嘛就干嘛。<br />
**I/O: **磁盘的写入（in）磁盘的读取（out）。在程序执行过程中必然要进行很多I/O操作，读写文件、输入输出、请求响应等等。I/O操作时最费时，举个例子，你要读一个文件，整个线程都暂停下来，等待文件读完后继续执行。换言之，I/O操作阻塞了代码的执行，极大地降低了程序的效率。<br />
<br />在Nodejs里面单线程可以通过回调函数（事件驱动）来做异步操作，达到非阻塞I/O的效果。</p>
<p><a name="ROAQP"></a></p>
<h3 id="安装nodejs">安装Nodejs</h3>
<ul>
<li>可以在官网自行选择安装包<a href="http://nodejs.cn/download/">下载</a></li>
<li>MacOS用户建议使用<a href="https://brew.sh/">brew</a>安装</li>
</ul>
<pre><code class="language-bash">#安装
brew install -g node
#卸载
brew uninstall nodejs
</code></pre>
<ul>
<li>使用<a href="https://github.com/nvm-sh/nvm">nvm</a>安装管理Nodejs版本</li>
</ul>
<pre><code class="language-bash">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
# or
wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
# 放入环境变量
source ~/.bash_profile
# 判断是否安装成功
nvm list
# 安装node
nvm install 6.14.4 # or 10.10.0, 8.9.1, etc
# 判断node安装成功
node -v
npm -v

</code></pre>
<p><a name="ec5SJ"></a></p>
<h3 id="nodejs-的简单使用">Nodejs 的简单使用</h3>
<p><a name="jftAl"></a></p>
<h4 id="模块化规范-commonjs">模块化规范 CommonJs</h4>
<p>在<a href="https://ducenand.github.io/post/qian-duan-mo-kuai-hua/">前端模块化</a>中已经对CommonJs做了介绍，并使用exports导出模块，require引入模块，实现了一个简单案例。</p>
<ul>
<li>require:引入一个模块</li>
<li>exports: 导出模块内容</li>
<li>module: 模块本身
<a name="34sz0"></a></li>
</ul>
<h4 id="使用nodejs创建服务">使用Nodejs创建服务</h4>
<pre><code class="language-javascript">// index.js
const http = require('http');

const hostname = '127.0.0.1';
const port = 3000;

const server = http.createServer((req, res) =&gt; {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('Hello World\n');
});

server.listen(port, hostname, () =&gt; {
  console.log(`Server running at http://${hostname}:${port}/`);
});
</code></pre>
<p>运行 <code>node index.js</code> 会起一个去 <code>127.0.0.1:3000</code> 的服务，并在浏览器中输出<code>Hello world</code><br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561560892621-cd119fbb-e53c-465b-9fb9-7d9c4e3a7238.png#align=left&amp;display=inline&amp;height=110&amp;name=image.png&amp;originHeight=220&amp;originWidth=480&amp;size=18190&amp;status=done&amp;width=240" alt="image.png">
<a name="nbTh4"></a></p>
<h4 id="了解基础api">了解基础API</h4>
<p><code>path</code> 模块提供用于处理文件路径和目录路径的实用工具。</p>
<pre><code class="language-javascript">// 引用
const path = require('path');
path.join('/foo', 'bar', 'baz/asdf', 'quux', '..');
// 返回: '/foo/bar/baz/asdf'

// path.resolve() 方法将路径或路径片段的序列解析为绝对路径
path.resolve('/foo/bar', './baz');
// 返回: '/foo/bar/baz'
</code></pre>
<p><code>fs</code>文件系统模块，对文件和目录进行读写操作。</p>
<pre><code class="language-javascript">// 引用
const fs = require('fs');
// 读取文件
fs.readFile('./test.txt', function(err, data) {
    if (err) {
        throw err;
    }
    console.log(data);
});
// 写入文件
fs.writeFile('input.txt', '我是新写入的内容', function (err) {
   if (err) console.error(err);
   console.log('数据写入的数据');
 });
// 删除
fs.unlink('/tmp/hello', (err) =&gt; {
  if (err) throw err;
  console.log('已成功删除 /tmp/hello');
});
// 重命名
fs.rename('/tmp/hello', '/tmp/world', (err) =&gt; {
  if (err) throw err;
  console.log('重命名完成');
});
</code></pre>
<p>更多<code>Api</code>参考<a href="http://nodejs.cn/api/">Nodejs Api</a> 官网。</p>
<p>参考：<br /><a href="https://blog.csdn.net/heyeqingquan/article/details/78839699">Chrome V8 引擎介绍</a><br /><a href="https://baike.baidu.com/item/V8/6178125">百度百科V8介绍</a><br /><a href="https://nodejs.org/zh-cn/docs/guides/">Nodejs官网指南</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[前端模块化]]></title>
        <id>https://ducenand.github.io//post/qian-duan-mo-kuai-hua</id>
        <link href="https://ducenand.github.io//post/qian-duan-mo-kuai-hua">
        </link>
        <updated>2019-06-25T13:20:21.000Z</updated>
        <summary type="html"><![CDATA[<p><a name="FHuyl"></a></p>
<h3 id="解释">解释</h3>
<p>前端模块化是将一个复杂的系统分解出多个模块，每个模块职责单一、相互独立、高度解耦并可替换。一般前端模块化指的是Javascript的模块。最常见的是Nodejs的NPM包。</p>
]]></summary>
        <content type="html"><![CDATA[<p><a name="FHuyl"></a></p>
<h3 id="解释">解释</h3>
<p>前端模块化是将一个复杂的系统分解出多个模块，每个模块职责单一、相互独立、高度解耦并可替换。一般前端模块化指的是Javascript的模块。最常见的是Nodejs的NPM包。</p>
 <!-- more --> 
<p>模块化开发的四点好处：</p>
<ul>
<li>避免变量污染，命名冲突</li>
<li>提高代码复用率</li>
<li>提高了可维护性</li>
<li>方便依赖关系管理</li>
</ul>
<p>模块化也是组件化的基石，是构成现在色彩斑斓的前端世界的前提条件。</p>
<p><a name="ZZHpF"></a></p>
<h3 id="常见的模块化规范">常见的模块化规范</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561430794751-423088d7-9b4c-4b66-89ce-bb84b077ee81.png#align=left&amp;display=inline&amp;height=155&amp;name=image.png&amp;originHeight=310&amp;originWidth=1242&amp;size=69723&amp;status=done&amp;width=621" alt="image.png"><br />Javascript在早期的设计中就没有模块、包、类的概念，开发者需要模拟出类似的功能，来隔离、组织复杂的Javascript代码，我们称为模块化。有了模块化之后的代码，我们考虑更多的<strong>代码使用和维护成本</strong>问题，然后就有很多模块化的规范。常见的模块化规范有<strong>CommonJs、AMD、CMD、ES6 Module</strong>等规范。</p>
<p><a name="Thbon"></a></p>
<h4 id="commonjs">CommonJs</h4>
<p>CommonJs是服务端模块化规范，Nodejs采用了这个规范并把它发扬光大。</p>
<pre><code class="language-javascript">//example.js
var n = 1;
function sayHello( name ){
    var name = name || &quot;Tom&quot;;
    return &quot;Hello~&quot;+name
}
function addFn(val){
    var val = val.x+val.y;
    return val
}
module.exports ={
    n:n,
    sayHello:sayHello,
    addFn:addFn
}
//main.js
var example = require('./example.js');
var addNum = {
    &quot;x&quot;:10,
    &quot;y&quot;:5
}
console.log( example )//查看example输出的对外模块接口；
console.log( example.n )//1;
console.log( example.sayHello(&quot;Jack&quot;) )// &quot;Hello~ Jack&quot;;
console.log( example.addFn(addNum) ) //15;
</code></pre>
<p>CommonJS 加载模块是同步的，所以只有加载完成才能执行后面的操作。像Nodejs主要用于服务器的编程，加载的模块文件一般都已经存在本地硬盘，所以加载起来比较快，不用考虑异步加载的方式，所以CommonJS规范比较适用。但如果是<strong>浏览器环境</strong>，要从服务器加载模块，这是就必须采用异步模式。所以就有了 AMD CMD 解决方案。</p>
<p><a name="h5mKU"></a></p>
<h4 id="amdasynchromous-module-definition-异步模块定义">AMD（Asynchromous Module Definition） 异步模块定义</h4>
<p>AMD 是客户端模块管理工具库<a href="https://www.zhihu.com/question/20351507/answer/14859415">RequireJS</a>提出并且完善的一套模块化规范，AMD 是基于异步加载模块的方式。<br />特点 ：异步加载，不阻塞页面的加载，能并行加载多个模块，但是不能按需加载，必须提前加载所需依赖</p>
<pre><code class="language-javascript">// 用define 定义模块
define({
    method1: function() {},
    method2: function() {},
});
// 定义模块时引用其他模块
define(['module1', 'module2'], function(m1, m2) {
   ...
});
// require 调用模块
require(['foo', 'bar'], function ( foo, bar ) {
        foo.doSomething();
});
</code></pre>
<p><a name="3EfCA"></a></p>
<h4 id="cmdcommon-module-definition通用模块定义">CMD（Common Module Definition）通用模块定义</h4>
<p>CMD 是国内大牛玉伯提出来的，实现的库是<a href="http://seajs.github.io/seajs">SeaJs</a>.</p>
<pre><code class="language-javascript">// test1.js
define(function(require,exports,module){
    ...
    module.exports={
        ...
    }
})

// test2.js
define(function(require,exports,module){    
    var cmd = require('./test1') 
    // cmd.xxx 依赖就近书写
    // 通过 exports 对外提供接口
    exports.doSomething = ...

    // 或者通过 module.exports 提供整个接口
    module.exports = ...
})
</code></pre>
<p><a name="TYMGg"></a></p>
<h4 id=""></h4>
<p><a href="http://es6.ruanyifeng.com/#docs/module-loader#ES6-%E6%A8%A1%E5%9D%97%E4%B8%8E-CommonJS-%E6%A8%A1%E5%9D%97%E7%9A%84%E5%B7%AE%E5%BC%82"><strong>CMD与AMD的区别：</strong></a></p>
<ol>
<li>对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。</li>
<li>CMD 推崇依赖就近，AMD 推崇依赖前置。</li>
</ol>
<pre><code class="language-javascript">define(function(require, exports, module) {
var a = require('./a')
a.doSomething()
// 此处略去 100 行
var b = require('./b') // 依赖可以就近书写
b.doSomething()
// ...
})
// AMD 默认推荐的是
define(['./a', './b'], function(a, b) {  // 依赖必须一开始就写好
a.doSomething()
// 此处略去 100 行
b.doSomething()
...
})
</code></pre>
<p><a name="jg1At"></a></p>
<h4 id="es6-module">ES6 Module</h4>
<p>在 ES6 之前，社区制定了一些模块加载方案，最主要的有 CommonJS 和 AMD 两种。前者用于服务器，后者用于浏览器。ES6 在语言标准的层面上，实现了模块功能，而且实现得相当简单，完全可以取代 CommonJS 和 AMD 规范，成为浏览器和服务器通用的模块解决方案。<br />ES6 的模块自动采用严格模式，不管你有没有在模块头部加上<code>&quot;use strict&quot;</code>;并使用export、import 命令实现导出引用模块。</p>
<pre><code class="language-javascript">// profile.js
var firstName = 'Michael';
var lastName = 'Jackson';
var year = 1958;

export { firstName, lastName, year };

// main.js
import { firstName, lastName, year } from './profile.js';

function setName(element) {
  element.textContent = firstName + ' ' + lastName;
}
//export default 命令

// export-default.js
export default function () {
  console.log('foo');
}
// import-default.js
import customName from './export-default';
customName(); // 'foo'

</code></pre>
<p><strong>ES6 Module 与 CommonJS 的区别</strong></p>
<ol>
<li>CommonJS 模块输出的是一个值的拷贝，ES6 模块输出的是值的引用。</li>
<li>CommonJS 模块是运行时加载，ES6 模块是编译时输出接口。</li>
</ol>
<p><a name="vQKAE"></a></p>
<h3 id="区分模块与组件">区分模块与组件</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561301838681-54a17420-c175-49e6-a6fc-d3f1b1bc074f.png#align=left&amp;display=inline&amp;height=239&amp;name=image.png&amp;originHeight=409&amp;originWidth=630&amp;size=103461&amp;status=done&amp;width=368" alt="image.png"><br /><strong>前端模块</strong>侧重的功能的封装，主要是针对Javascript代码，隔离、组织复制的javascript代码，将它封装成一个个具有特定功能的的模块。<br />模块可以通过传递参数的不同修改这个功能的的相关配置，每个模块都是一个单独的作用域，根据需要调用。<br />一个模块的实现可以依赖其它模块。</p>
<p><strong>前端组件</strong>更多关注的UI部分，页面的每个部件，比如头部，底部、内容区，弹出框都可以成为一个组件，每个组件有独立的HTML、CSS、JS代码。<br />可以根据需要把它放在页面的任意部位，也可以和其他组件一起形成新的组件。一个页面是各个组件的结合，可以根据需要进行组装。</p>
<p><strong>扩展：站在业务的角度架构的视角模块组件又可以这么分。</strong><br />模块和组件都是系统的组成部分。<br />从逻辑角度拆分系统后，得到的单元就是“模块”。<br />从物理角度来拆分系统后，得到的单元就是“组件”。<br />划分模块的主要目的是职责分离，划分组件的主要目的是单元复用。<br />假设我们要做一个学生管理系统，这个系统从逻辑的角度拆分，可以分为“登录注册模块”“个人成绩模块”；从物理的角度来拆分，可以拆分为Nginx、Web服务器、MySql。</p>
<p>参考：<br /><a href="https://blog.csdn.net/weixin_33913377/article/details/87954371">浅谈前端模块化</a><br /><a href="https://blog.csdn.net/qq_36709020/article/details/80056736">前端模块与组件的区别</a><br /><a href="https://www.cnblogs.com/best/p/10076782.html">30分钟学会前端模块化开发</a><br /><a href="https://www.cnblogs.com/chenzechuang/p/6559351.html">前端模块化、组件化的理解</a><br /><a href="https://www.zhihu.com/question/20351507/answer/14859415">知乎玉伯回复CMD和AMD的区别</a><br /><a href="">阮一峰ES6 Module 语法</a><br /><a href="">ES6 Module与CommonJs的差异化</a><br />从零开始学架构（李运华）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[探索与发现：第1期]]></title>
        <id>https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-1-qi</id>
        <link href="https://ducenand.github.io//post/tan-suo-yu-fa-xian-di-1-qi">
        </link>
        <updated>2019-06-23T10:38:41.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>这里记录一周新鲜有趣的发现和探索。</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>这里记录一周新鲜有趣的发现和探索。</p>
</blockquote>
<!-- more -->
<p>1、与不懂技术的人说明需求改变的复杂度，可以通过举例说明，比如你要盖房子,房子正盖着呢，你突然觉得楼层之前的距离有点近，希望楼层增加个0.5米。你觉得复杂吗？——卖桃者说</p>
<p>2、6月19日，Facebook发行了区块链数字货币白皮书（Libra），引起币圈的轰动，马化腾和王小川等企业家也对此议论纷纷。马化腾表示“技术不难，重在监管”，王小川则认为“世界会因此而变”。而此前被王小川diss的孙宇晨则调侃道：你不是说我们是骗子吗，怎么现在又觉得是区块链革命了？</p>
<p>3、6月20日在第三届图像识别竞赛<a href="http://www.vision.ee.ethz.ch/webvision/challenge_results.html">WebVision</a>中，阿里AI以82.54%的识别准确率击败了全世界150多支参赛队伍，获得冠军，将万物识别领域的历史纪录提升了3个百分点，该竞赛要求参赛的AI模型将1600万张图片精准分类到5000个类目中。<br />据了解，目前阿里AI 不仅能够以超级速度对海量图片进行分类，还能识别超过100万种物理实体，例如5万种植物、1万种鸟、1千种不同型号的车。</p>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561282154767-80cacd1a-5f9b-4f3b-912d-7e77e79f7ec9.png#align=left&amp;display=inline&amp;height=283&amp;name=image.png&amp;originHeight=566&amp;originWidth=2302&amp;size=244143&amp;status=done&amp;width=1151" alt="image.png"><br />前5名分别是阿里、商汤、华为、百度、佳都科技，都是中国本土的互联网公司，可见中国在人工智能方面已经开始领先国际了。</p>
<p>4、来自全球大前端技术大会<a href="https://mp.weixin.qq.com/s/S_Unh-UYbb0cYL-bWrBmgQ">《Flutter:最新进展和未来展望》摘要</a>：Flutter 是 Google 帮助开发者在移动、Web 和桌面多个平台实现高质量原生应用程序的开源UI工具包。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561282039161-5fe6b327-8681-49b5-ad3c-45e28ee43a75.png#align=left&amp;display=inline&amp;height=286&amp;name=image.png&amp;originHeight=572&amp;originWidth=1342&amp;size=197315&amp;status=done&amp;width=671" alt="image.png"></p>
<p>5、6月17日四川宜宾发生6.0级地震，地震造成不同程度受灾和伤亡，哀悼！就在宜宾地震中，地震预警系统，提前了<strong>1分钟预警</strong>，减少了不必要的伤亡和损失，听李永乐老师讲解地震预警的原理。<br />区分地震预警和地震预报，地震预报是在地震之前告诉大家要地震了，地震预警是发生地震后警告周边的人地震马上要来了。<br />最早提出地震预警的是<strong>1868年美国地震学家库珀</strong>提出。<br />地震波分为P波（纵波）和S波（横波）P波引起建筑物上下波动，速度快，破坏力小。S波速度慢破坏力大。<br />地震预警的盲区地带的计算，和预警时间计算，登录YouTube搜索“李永乐老师”。</p>
<p>6、最近健身连锁品牌浩沙一夜崩盘，全国直营门店全线倒闭，<a href="https://m.huxiu.com/article/304928.html">“浩沙这么大品牌都倒闭，是不是健身房不能开了？</a><br />这里将为你揭开健身房中国20多年的顽疾，也为大家剖析目前处于混战阶段的各类健身房业态背后的真实逻辑和未来可能的发展趋势。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561282418276-fb5a3c83-c80f-4e08-9cc6-0500dc5a8a42.png#align=left&amp;display=inline&amp;height=357&amp;name=image.png&amp;originHeight=714&amp;originWidth=1256&amp;size=1426645&amp;status=done&amp;width=628" alt="image.png"></p>
<p>7、<a href="https://github.com/benhowdle89/grade">Grade</a> 这个JS 库可以从图像提取两种主要颜色，然后生成渐变色背景。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561284917190-708b177e-01fa-40aa-92a5-5b10c6a0d04f.png#align=left&amp;display=inline&amp;height=429&amp;name=image.png&amp;originHeight=858&amp;originWidth=1044&amp;size=765491&amp;status=done&amp;width=522" alt="image.png"><br />8、<a href="https://github.com/hiroppy/fusuma">Fusuma</a> 将 Markdown 文件转成幻灯片的工具，功能很强大，在本地起一个 HTTP 服务，完成很多后端功能。</p>
<pre><code class="language-bash">npm i fusuma -D
mkdir slides &amp;&amp; echo '# Hello😄' &gt; slides/title.md
npx fusuma init     # customize fusuma configuration
npx fusuma start    # development
</code></pre>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561284880773-b107ead8-d7d8-4c2b-b5e2-b9f6a97d34c1.png#align=left&amp;display=inline&amp;height=401&amp;name=image.png&amp;originHeight=802&amp;originWidth=1432&amp;size=46357&amp;status=done&amp;width=716" alt="image.png"><br />9、<a href="https://github.com/huangjianke/Gitter">Gitter</a> 一款GitHub 的微信小程序客户端，用户可以在微信上看Github。便捷、颜值高、代码开源。</p>
<p>10、<a href="https://cssfx.dev/">Cssfx</a> 该网站收集各种 CSS 特效，可以复制粘贴到自己的项目。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561285193038-633a2040-0890-4b7a-9f50-3182510f414b.png#align=left&amp;display=inline&amp;height=623&amp;name=image.png&amp;originHeight=1246&amp;originWidth=2310&amp;size=688953&amp;status=done&amp;width=1155" alt="image.png"></p>
<p>11、<a href="https://www.canva.cn/">Canva</a> 让不懂设计的你也能做出优美大片。一个在线图片设计网站。各种免费模板供你使用。<br /><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1561285391671-952a9120-7187-472a-b4fc-04ffbe090088.png#align=left&amp;display=inline&amp;height=345&amp;name=image.png&amp;originHeight=690&amp;originWidth=1942&amp;size=781645&amp;status=done&amp;width=971" alt="image.png"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么选择Webpack?]]></title>
        <id>https://ducenand.github.io//post/wei-shi-me-xuan-ze-webpack</id>
        <link href="https://ducenand.github.io//post/wei-shi-me-xuan-ze-webpack">
        </link>
        <updated>2019-06-16T07:01:18.000Z</updated>
        <summary type="html"><![CDATA[<p><a name="RnUdT"></a></p>
<h3 id="社区活跃生态丰富">社区活跃生态丰富</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1560927596479-93e6acbd-f8e0-411a-8523-14481328651e.png#align=left&amp;display=inline&amp;height=195&amp;name=image.png&amp;originHeight=390&amp;originWidth=1456&amp;size=59222&amp;status=done&amp;width=728" alt="image.png"></p>
]]></summary>
        <content type="html"><![CDATA[<p><a name="RnUdT"></a></p>
<h3 id="社区活跃生态丰富">社区活跃生态丰富</h3>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1560927596479-93e6acbd-f8e0-411a-8523-14481328651e.png#align=left&amp;display=inline&amp;height=195&amp;name=image.png&amp;originHeight=390&amp;originWidth=1456&amp;size=59222&amp;status=done&amp;width=728" alt="image.png"></p>
<!-- more --> 
<p><a name="fbaoS"></a></p>
<h3 id="官方迭代速度快维护好">官方迭代速度快维护好</h3>
<ul>
<li>6月10-6月17 一周的活跃情况</li>
</ul>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1560783492113-d2596562-7054-459d-bebf-3fa26eb33124.png#align=left&amp;display=inline&amp;height=596&amp;name=image.png&amp;originHeight=1192&amp;originWidth=1486&amp;size=192070&amp;status=done&amp;width=743" alt="image.png">
<a name="jFFPd"></a></p>
<h3 id="配置灵活和插件化扩展">配置灵活和插件化扩展</h3>
<ul>
<li>
<p>配置很灵活对于不满足一些开发需要的，也是可以通过webpack插件机制进行扩展。定义自己的loader和plugin去满足自己团队个性化的需求。</p>
</li>
<li>
<p>官方维护的loader和plugins很多</p>
</li>
</ul>
<p><img src="https://cdn.nlark.com/yuque/0/2019/png/173770/1560782685930-f7868512-fc3b-485f-95ba-b71743444970.png#align=left&amp;display=inline&amp;height=646&amp;name=image.png&amp;originHeight=1292&amp;originWidth=1710&amp;size=708432&amp;status=done&amp;width=855" alt="image.png"></p>
<p>参考：<br /><a href="https://webpack.docschina.org/loaders/">官方维护的loader</a><br /><a href="https://webpack.docschina.org/plugins/">官方维护的plugins</a><br /><a href="https://github.com/webpack/webpack/pulse">webpack活跃度参考</a></p>
]]></content>
    </entry>
</feed>